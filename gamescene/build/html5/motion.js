
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2017 Job and Esther Technologies, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

"use strict";var MotionAudioManager = function() {{} };var P = MotionAudioManager.prototype;P.constructor = MotionAudioManager;P._t = {}; P._t["MotionAudioManager"] = true;MotionAudioManager.createInstance = function() {var _v = new MotionAudioManager();return(_v._construct());};P._construct = function() {return(this);};MotionAudioManager.forApplication = function(context) {if((context) == (null)) {return(null);}return(MotionAudioManagerForHTML5.forApplication((((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (context, "CapeApplicationContext")) ? (context) : (null))));};P.getClipForResource = function(id) {};P.getStreamForResource = function(id) {};var MotionAudioManagerForHTML5 = function() {MotionAudioManager.call(this);this.context = null;{} };var P = MotionAudioManagerForHTML5.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionAudioManager.prototype);P.constructor = MotionAudioManagerForHTML5;P._t = {}; P._t["MotionAudioManagerForHTML5"] = true;P._t["MotionAudioManager"] = true;MotionAudioManagerForHTML5.createInstance = function() {var _v = new MotionAudioManagerForHTML5();return(_v._construct());};P._construct = function() {if(MotionAudioManager.prototype._construct.call(this) == (null)) {return(null);}(this.context) = (null);return(this);};MotionAudioManagerForHTML5.forApplication = function(context) {if((context) == (null)) {return(null);}var v = MotionAudioManagerForHTML5.createInstance();v.setContext(context);return(v);};P.getClipForResource = function(id) {var v = MotionAudioManagerForHTML5.MyAudioClip.createInstance();v.setId(id);return(v);};P.getStreamForResource = function(id) {return(MotionAudioManagerForHTML5.MyAudioStream.initialize(id));};P.getContext = function() {return(this.context);};P.setContext = function(v) {(this.context) = (v);return(this);};var P2 = P;MotionAudioManagerForHTML5.MyAudioClip = function() {this.id = null;{} };var P = MotionAudioManagerForHTML5.MyAudioClip.prototype;P.constructor = MotionAudioManagerForHTML5.MyAudioClip;P._t = {}; P._t["MotionAudioManagerForHTML5.MyAudioClip"] = true;P._t["MotionAudioClip"] = true;MotionAudioManagerForHTML5.MyAudioClip.createInstance = function() {var _v = new MotionAudioManagerForHTML5.MyAudioClip();return(_v._construct());};P._construct = function() {(this.id) = (null);return(this);};P.play = function() {var v = false;var fnp = this.id;var audioElement = null;audioElement = document.createElement('audio');audioElement.setAttribute("preload", "auto");var srcmp3 = document.createElement('source');srcmp3.type = 'audio/mpeg';srcmp3.src = fnp + '.mp3';audioElement.appendChild(srcmp3);var srcogg = document.createElement('source');srcogg.type = 'audio/ogg';srcogg.src = fnp + '.ogg';audioElement.appendChild(srcogg);var srcm4a = document.createElement('source');srcm4a.type = 'audio/mp4';srcm4a.src = fnp + '.m4a';audioElement.appendChild(srcm4a);var srcwav = document.createElement('source');srcwav.type = 'audio/wav';srcwav.src = fnp + '.wav';audioElement.appendChild(srcwav);document.body.appendChild(audioElement);audioElement.load();try {audioElement.play();audioElement.addEventListener('ended', function() {audioElement.parentNode.removeChild(audioElement);audioElement = null;});v = true;}catch(e) {}return(v);};P.getId = function() {return(this.id);};P.setId = function(v) {(this.id) = (v);return(this);};P = P2;P2 = null;var P2 = P;MotionAudioManagerForHTML5.MyAudioStream = function() {this.audioStream = null;{} };var P = MotionAudioManagerForHTML5.MyAudioStream.prototype;P.constructor = MotionAudioManagerForHTML5.MyAudioStream;P._t = {}; P._t["MotionAudioManagerForHTML5.MyAudioStream"] = true;P._t["MotionAudioStream"] = true;MotionAudioManagerForHTML5.MyAudioStream.createInstance = function() {var _v = new MotionAudioManagerForHTML5.MyAudioStream();return(_v._construct());};P._construct = function() {(this.audioStream) = (null);return(this);};MotionAudioManagerForHTML5.MyAudioStream.initialize = function(id) {var fnp = id;var audioElement = null;audioElement = document.createElement('audio');audioElement.setAttribute("preload", "auto");var srcmp3 = document.createElement('source');srcmp3.type = 'audio/mpeg';srcmp3.src = fnp + '.mp3';audioElement.appendChild(srcmp3);var srcogg = document.createElement('source');srcogg.type = 'audio/ogg';srcogg.src = fnp + '.ogg';audioElement.appendChild(srcogg);var srcm4a = document.createElement('source');srcm4a.type = 'audio/mp4';srcm4a.src = fnp + '.m4a';audioElement.appendChild(srcm4a);var srcwav = document.createElement('source');srcwav.type = 'audio/wav';srcwav.src = fnp + '.wav';audioElement.appendChild(srcwav);document.body.appendChild(audioElement);audioElement.load();return(MotionAudioManagerForHTML5.MyAudioStream.createInstance().setAudioStream(audioElement));};P.play = function() {var audioStream = this.audioStream;if((audioStream) !== (null)) {audioStream.play();return(true);}return(false);};P.pause = function() {var audioStream = this.audioStream;if((audioStream) !== (null)) {audioStream.pause();return(true);}return(false);};P.stop = function() {var audioStream = this.audioStream;if((audioStream) !== (null)) {audioStream.pause();audioStream.currentTime = 0;return(true);}return(false);};P.seek = function(sec) {var audioStream = this.audioStream;if((sec) >= (0) && (audioStream) !== (null)) {audioStream.currentTime = sec;return(true);}return(false);};P.getCurrentTime = function() {var ct = 0;var audioStream = this.audioStream;if((audioStream) !== (null)) {ct = audioStream.currentTime;}return(ct);};P.getDuration = function() {var d = 0.0;var audioStream = this.audioStream;if((audioStream) !== (null)) {d = audioStream.duration;}return(~~(d));};P.setLooping = function(v) {var audioStream = this.audioStream;var shouldLoop = false;if((v) !== (null) && (audioStream) !== (null)) {if(v) {audioStream.loop = true;(shouldLoop) = (true);}else {audioStream.loop = false;(shouldLoop) = (false);}}return(shouldLoop);};P.setVolume = function(v) {var audioStream = this.audioStream;if((v) !== (null) && (audioStream) !== (null)) {if((v) <= (0.0)) {audioStream.volume = 0.0;}else {if((v) >= (1.0)) {audioStream.volume = 1.0;}else {audioStream.volume = v;}}return(true);}return(false);};P.getAudioStream = function() {return(this.audioStream);};P.setAudioStream = function(v) {(this.audioStream) = (v);return(this);};P = P2;P2 = null;var MotionEntity = function() {this.index = null;this.scene = null;{} };var P = MotionEntity.prototype;P.constructor = MotionEntity;P._t = {}; P._t["MotionEntity"] = true;MotionEntity.createInstance = function() {var _v = new MotionEntity();return(_v._construct());};P._construct = function() {(this.scene) = (null);(this.index) = -(1);return(this);};P.setScene = function(scene) {this.scene = (scene);};P.getScene = function() {return(this.scene);};P.initialize = function() {};P.cleanup = function() {};P.tick = function(gameTime, delta) {};P.remove = function() {var ss = this.scene;if((ss) !== (null)) {ss.removeEntity(this);}};var MotionScene = function() {this.manager = null;this.backend = null;this.context = null;{} };var P = MotionScene.prototype;P.constructor = MotionScene;P._t = {}; P._t["MotionScene"] = true;MotionScene.createInstance = function() {var _v = new MotionScene();return(_v._construct());};P._construct = function() {(this.context) = (null);(this.backend) = (null);(this.manager) = (null);return(this);};P.setContext = function(value) {this.context = (value);};P.setManager = function(value) {(this.manager) = (value);return(this);};P.getManager = function() {return(this.manager);};P.setBackend = function(value) {(this.backend) = (value);return(this);};P.getBackend = function() {return(this.backend);};P.initialize = function() {};P.start = function() {};P.onKeyEvent = function(event) {};P.onPointerEvent = function(event) {};P.tick = function(gameTime, delta) {};P.stop = function() {};P.cleanup = function() {};P.createImageFromResource = function(name) {return(this.backend.createImageFromResource(name));};P.createTextureForImageResource = function(name) {var img = this.createImageFromResource(name);if((img) == (null)) {return(null);}return(this.createTextureForImage(img));};P.createTextureForImage = function(image) {return(this.backend.createTextureForImage(image));};P.createTextureForColor = function(color) {return(this.backend.createTextureForColor(color));};P.deleteTexture = function(texture) {this.backend.deleteTexture(texture);};P.deleteAllTextures = function() {this.backend.deleteAllTextures();};P.replaceScene = function(scene) {if((this.manager) !== (null)) {this.manager.replaceScene(scene);}};P.pushScene = function(scene) {if((this.manager) !== (null)) {this.manager.pushScene(scene);}};P.popScene = function() {if((this.manager) !== (null)) {this.manager.popScene();}};var MotionMultiSpriteEntity = function() {MotionEntity.call(this);this.layer = null;this.x = null;this.y = null;{} };var P = MotionMultiSpriteEntity.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionEntity.prototype);P.constructor = MotionMultiSpriteEntity;P._t = {}; P._t["MotionMultiSpriteEntity"] = true;P._t["MotionEntity"] = true;MotionMultiSpriteEntity.createInstance = function() {var _v = new MotionMultiSpriteEntity();return(_v._construct());};P._construct = function() {if(MotionEntity.prototype._construct.call(this) == (null)) {return(null);}(this.y) = (0.0);(this.x) = (0.0);(this.layer) = (null);return(this);};P.layoutSprites = function(x, y) {};P.initialize = function() {MotionEntity.prototype.initialize.call(this);if((this.layer) == (null)) {(this.layer) = ((((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (this.scene, "MotionSpriteLayer")) ? (this.scene) : (null)));}};P.cleanup = function() {MotionEntity.prototype.cleanup.call(this);(this.layer) = (null);};P.move = function(x, y) {this.x = (x);this.y = (y);this.layoutSprites(x, y);};P.onLayout = function() {this.layoutSprites(this.x, this.y);};P.getX = function() {return(this.x);};P.getY = function() {return(this.y);};var MotionSceneManager = function() {this.sceneStack = null;this.isInitialized = null;this.isStarted = null;this.backend = null;this.context = null;{} };var P = MotionSceneManager.prototype;P.constructor = MotionSceneManager;P._t = {}; P._t["MotionSceneManager"] = true;MotionSceneManager.forScene = function(scene, backend) {var v = MotionSceneManager.createInstance();v.setBackend(backend);v.pushScene(scene);return(v);};MotionSceneManager.createInstance = function() {var _v = new MotionSceneManager();return(_v._construct());};P._construct = function() {(this.context) = (null);(this.backend) = (null);(this.isStarted) = (false);(this.isInitialized) = (false);(this.sceneStack) = (null);(this.sceneStack) = CapeStack.createInstance();return(this);};P.initialize = function() {(this.isInitialized) = (true);var scene = this.sceneStack.peek();if((scene) !== (null)) {scene.initialize();}};P.start = function() {(this.isStarted) = (true);var scene = this.sceneStack.peek();if((scene) !== (null)) {scene.start();}};P.stop = function() {(this.isStarted) = (false);var scene = this.sceneStack.peek();if((scene) !== (null)) {scene.stop();}};P.cleanup = function() {(this.isInitialized) = (false);while(this.doPopScene()) {;}};P.onNewCurrentScene = function() {var scene = this.sceneStack.peek();if((scene) == (null)) {return;}if(this.isInitialized) {scene.initialize();}if(this.isStarted) {scene.start();}};P.getCurrentScene = function() {return(this.sceneStack.peek());};P.replaceScene = function(next) {this.doReplaceCurrentScene(next);};P.doReplaceCurrentScene = function(next) {this.popScene();this.pushScene(next);};P.pushScene = function(scene) {var currentScene = this.sceneStack.peek();if((currentScene) !== (null)) {if(this.isStarted) {currentScene.stop();}if(this.isInitialized) {currentScene.cleanup();}}if((scene) !== (null)) {scene.setContext(this.context);scene.setBackend(this.backend);scene.setManager(this);this.sceneStack.push(scene);this.onNewCurrentScene();}};P.popScene = function() {this.doPopScene();};P.doPopScene = function() {var currentScene = this.sceneStack.pop();if((currentScene) !== (null)) {if(this.isStarted) {currentScene.stop();}if(this.isInitialized) {currentScene.cleanup();}currentScene.setManager(null);currentScene.setBackend(null);this.onNewCurrentScene();return(true);}return(false);};P.getBackend = function() {return(this.backend);};P.setBackend = function(v) {(this.backend) = (v);return(this);};P.getContext = function() {return(this.context);};P.setContext = function(v) {(this.context) = (v);return(this);};var MotionSpriteEntity = function() {MotionEntity.call(this);this.sprite = null;this.layer = null;{} };var P = MotionSpriteEntity.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionEntity.prototype);P.constructor = MotionSpriteEntity;P._t = {}; P._t["MotionSpriteEntity"] = true;P._t["MotionSprite"] = true;P._t["MotionEntity"] = true;MotionSpriteEntity.createInstance = function() {var _v = new MotionSpriteEntity();return(_v._construct());};P._construct = function() {if(MotionEntity.prototype._construct.call(this) == (null)) {return(null);}(this.layer) = (null);(this.sprite) = (null);return(this);};P.createSprite = function() {return(null);};P.initialize = function() {MotionEntity.prototype.initialize.call(this);if((this.layer) == (null)) {(this.layer) = ((((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (this.scene, "MotionSpriteLayer")) ? (this.scene) : (null)));}if((this.layer) !== (null)) {(this.sprite) = this.createSprite();}};P.cleanup = function() {MotionEntity.prototype.cleanup.call(this);if((this.sprite) !== (null)) {this.sprite.removeFromContainer();(this.sprite) = (null);}(this.layer) = (null);};P.move = function(x, y) {if((this.sprite) !== (null)) {this.sprite.move(x, y);}};P.resize = function(w, h) {if((this.sprite) !== (null)) {this.sprite.resize(w, h);}};P.scale = function(scalex, scaley) {if((this.sprite) !== (null)) {this.sprite.scale(scalex, scaley);}};P.setRotation = function(angle) {if((this.sprite) !== (null)) {this.sprite.setRotation(angle);}};P.setAlpha = function(alpha) {if((this.sprite) !== (null)) {this.sprite.setAlpha(alpha);}};P.getX = function() {if((this.sprite) !== (null)) {return(this.sprite.getX());}return(0.0);};P.getY = function() {if((this.sprite) !== (null)) {return(this.sprite.getY());}return(0.0);};P.getWidth = function() {if((this.sprite) !== (null)) {return(this.sprite.getWidth());}return(0.0);};P.getHeight = function() {if((this.sprite) !== (null)) {return(this.sprite.getHeight());}return(0.0);};P.getRotation = function() {if((this.sprite) !== (null)) {return(this.sprite.getRotation());}return(0.0);};P.getAlpha = function() {if((this.sprite) !== (null)) {return(this.sprite.getAlpha());}return(0.0);};P.getScaleX = function() {if((this.sprite) !== (null)) {return(this.sprite.getScaleX());}return(0.0);};P.getScaleY = function() {if((this.sprite) !== (null)) {return(this.sprite.getScaleY());}return(0.0);};P.removeFromContainer = function() {this.remove();};var MotionSpriteScene = function() {MotionScene.call(this);this.layer = null;this.backgroundColor = null;this.backgroundTexture = null;this.backgroundSprite = null;{} };var P = MotionSpriteScene.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionScene.prototype);P.constructor = MotionSpriteScene;P._t = {}; P._t["MotionSpriteScene"] = true;P._t["MotionScene"] = true;P._t["MotionSpriteLayer"] = true;MotionSpriteScene.createInstance = function() {var _v = new MotionSpriteScene();return(_v._construct());};P._construct = function() {if(MotionScene.prototype._construct.call(this) == (null)) {return(null);}(this.backgroundSprite) = (null);(this.backgroundTexture) = (null);(this.backgroundColor) = (null);(this.layer) = (null);return(this);};P.setBackgroundColor = function(color) {(this.backgroundColor) = (color);this.updateBackgroundColor();};P.getBackgroundTexture = function() {if((this.backgroundTexture) !== (null)) {return(this.backgroundTexture);}if((this.backgroundColor) !== (null)) {return(this.createTextureForColor(this.backgroundColor));}return(null);};P.updateBackgroundColor = function() {if((this.backgroundSprite) == (null)) {if((this.layer) !== (null)) {var txt = this.getBackgroundTexture();if((txt) !== (null)) {(this.backgroundSprite) = this.layer.addTextureSpriteForSize(txt, this.layer.getReferenceWidth(), this.layer.getReferenceHeight());this.backgroundSprite.move(0, 0);}}}else {var txt = this.getBackgroundTexture();if((txt) !== (null)) {this.backgroundSprite.setTexture(txt);}}};P.initialize = function() {MotionScene.prototype.initialize.call(this);(this.layer) = this.backend.createSpriteLayer();this.updateBackgroundColor();};P.cleanup = function() {MotionScene.prototype.cleanup.call(this);this.layer.removeAllSprites();this.backend.deleteSpriteLayer(this.layer);(this.layer) = (null);(this.backgroundSprite) = (null);};P.onPointerEvent = function(event) {if((this.layer) !== (null)) {event.x = event.x * this.layer.getReferenceWidth();event.y = event.y * this.layer.getReferenceHeight();}};P.addTextureSpriteForSize = function(texture, width, height) {return(this.layer.addTextureSpriteForSize(texture, width, height));};P.addTextSprite = function(text) {return(this.layer.addTextSprite(text));};P.addContainerSprite = function(width, height) {return(this.layer.addContainerSprite(width, height));};P.removeSprite = function(sprite) {this.layer.removeSprite(sprite);};P.removeAllSprites = function() {this.layer.removeAllSprites();};P.setReferenceWidth = function(referenceWidth) {this.layer.setReferenceWidth(referenceWidth);};P.setReferenceHeight = function(referenceHeight) {this.layer.setReferenceHeight(referenceHeight);};P.getReferenceWidth = function() {return(this.layer.getReferenceWidth());};P.getReferenceHeight = function() {return(this.layer.getReferenceHeight());};P.getHeightValue = function(spec) {return(this.layer.getHeightValue(spec));};P.getWidthValue = function(spec) {return(this.layer.getWidthValue(spec));};P.getLayer = function() {return(this.layer);};P.setLayer = function(v) {(this.layer) = (v);return(this);};var MotionSpriteSceneWithEntities = function() {MotionSpriteScene.call(this);this.entities = null;this.pointerListeners = null;this.keyListeners = null;this.highestIndex = null;this.capturedPointerListener = null;{} };var P = MotionSpriteSceneWithEntities.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionSpriteScene.prototype);P.constructor = MotionSpriteSceneWithEntities;P._t = {}; P._t["MotionSpriteSceneWithEntities"] = true;P._t["MotionSpriteScene"] = true;P._t["MotionScene"] = true;P._t["MotionSpriteLayer"] = true;P._t["MotionEntityScene"] = true;P._t["MotionScene"] = true;MotionSpriteSceneWithEntities.createInstance = function() {var _v = new MotionSpriteSceneWithEntities();return(_v._construct());};P._construct = function() {if(MotionSpriteScene.prototype._construct.call(this) == (null)) {return(null);}(this.capturedPointerListener) = (null);(this.highestIndex) = -(1);(this.keyListeners) = (new Array());(this.pointerListeners) = (new Array());(this.entities) = (null);return(this);};P.cleanup = function() {MotionSpriteScene.prototype.cleanup.call(this);this.removeAllEntities();};P.tick = function(gameTime, delta) {MotionSpriteScene.prototype.tick.call(this, gameTime, delta);if((this.entities) !== (null)) {var n = 0;var m = this.entities.length;for((n) = (0) ; (n) < (m) ; (n)++) {var entity = this.entities[n];if((entity) !== (null)) {if((entity) == (null)) {continue;}entity.tick(gameTime, delta);}}}};P.onKeyEvent = function(event) {if((this.keyListeners) !== (null)) {var n = 0;var m = this.keyListeners.length;for((n) = (0) ; (n) < (m) ; (n)++) {var keyListener = this.keyListeners[n];if((keyListener) !== (null)) {keyListener.onKeyEvent(event);if(event.isConsumed) {break;}}}}};P.onPointerEvent = function(event) {MotionSpriteScene.prototype.onPointerEvent.call(this, event);if((this.capturedPointerListener) !== (null)) {if(this.capturedPointerListener.onPointerEvent(event) === (false)) {(this.capturedPointerListener) = (null);}event.consume();return;}if((this.pointerListeners) !== (null)) {var n = 0;var m = this.pointerListeners.length;for((n) = (0) ; (n) < (m) ; (n)++) {var pointerListener = this.pointerListeners[n];if((pointerListener) !== (null)) {if(event.isConsumed) {break;}if(pointerListener.onPointerEvent(event)) {event.consume();(this.capturedPointerListener) = (pointerListener);break;}}}}};P.grow = function() {var nsz = 0;if((this.entities) == (null)) {(nsz) = (1024);}else {(nsz) = (this.entities.length) * (2);}var v = [];if((this.entities) !== (null)) {var osz = this.entities.length;for(var n = 0 ; (n) < (osz) ; (n)++) {(v[n]) = (this.entities[n]);}}(this.entities) = (v);};P.addEntity = function(entity) {if((entity) == (null)) {return;}var thisIndex = (this.highestIndex) + (1);var count = 0;if((this.entities) !== (null)) {(count) = (this.entities.length);}if((thisIndex) >= (count)) {this.grow();}entity.setScene(this);(this.entities[thisIndex]) = (entity);entity.index = (thisIndex);(this.highestIndex) = (thisIndex);if(((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (entity, "CavePointerListener"))) {this.pointerListeners.push(entity);}if(((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (entity, "CaveKeyListener"))) {this.keyListeners.push(entity);}entity.initialize();};P.removeEntity = function(entity) {if((entity) == (null)) {return;}var eidx = entity.index;if((eidx) < (0)) {return;}if(((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (entity, "CavePointerListener"))) {CapeVector.removeValue(this.pointerListeners, entity);}if(((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (entity, "CaveKeyListener"))) {CapeVector.removeValue(this.keyListeners, entity);}entity.cleanup();entity.setScene(null);entity.index = -(1);if((this.highestIndex) === (eidx)) {(this.entities[eidx]) = (null);}else {var n = this.entities[this.highestIndex];(this.entities[eidx]) = (n);if((n) !== (null)) {n.index = (eidx);}(this.entities[this.highestIndex]) = (null);}(this.highestIndex)--;};P.removeAllEntities = function() {if((this.entities) == (null)) {return;}var esz = this.entities.length;for(var n = 0 ; (n) < (esz) ; (n)++) {var e = this.entities[n];if((e) == (null)) {continue;}e.cleanup();e.setScene(null);e.index = -(1);}(this.entities) = (null);};var MotionSpriteSheetEntity = function() {MotionSpriteEntity.call(this);this.sprite = null;this.imageSheet = null;this.arraySize = null;this.currentFrame = null;this.textureSprite = null;this.delay = null;this.timeVal = null;{} };var P = MotionSpriteSheetEntity.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionSpriteEntity.prototype);P.constructor = MotionSpriteSheetEntity;P._t = {}; P._t["MotionSpriteSheetEntity"] = true;P._t["MotionSpriteEntity"] = true;P._t["MotionSprite"] = true;P._t["MotionEntity"] = true;MotionSpriteSheetEntity.createInstance = function() {var _v = new MotionSpriteSheetEntity();return(_v._construct());};P._construct = function() {if(MotionSpriteEntity.prototype._construct.call(this) == (null)) {return(null);}(this.timeVal) = (null);(this.delay) = (0);(this.textureSprite) = (null);(this.currentFrame) = -(1);(this.arraySize) = (0);(this.imageSheet) = (null);(this.sprite) = (null);return(this);};P.initialize = function() {MotionSpriteEntity.prototype.initialize.call(this);(this.sprite) = MotionSpriteEntity.sprite;(this.textureSprite) = ((((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (this.sprite, "MotionTextureSprite")) ? (this.sprite) : (null)));(this.timeVal) = CapeTimeValue.forSeconds(1);};P.setImageSheet = function(imgs) {if((imgs) == (null)) {return(false);}(this.currentFrame) = -(1);(this.imageSheet) = ([]);var i = 0;if((imgs) !== (null)) {var n = 0;var m = imgs.length;for((n) = (0) ; (n) < (m) ; (n)++) {var txt = imgs[n];if((txt) !== (null)) {(this.imageSheet[i]) = this.scene.createTextureForImage(txt);(i)++;}}}(this.arraySize) = (this.imageSheet.length);return(true);};P.setFramesPerSecond = function(fps) {var v = (1000) / (fps);if((this.timeVal) !== (null)) {this.timeVal.setMicroSeconds((v) * (1000));}(this.delay) = (v) * (1000);};P.nextFrame = function() {if((this.imageSheet) == (null) || (this.arraySize) < (1)) {(this.sprite) = (null);return(false);}(this.currentFrame)++;if((this.currentFrame) >= (this.arraySize)) {(this.currentFrame) = (0);}if((this.textureSprite) !== (null)) {this.textureSprite.setTexture(this.imageSheet[this.currentFrame]);}return(true);};P.tick = function(gameTime, delta) {MotionSpriteEntity.prototype.tick.call(this, gameTime, delta);this.nextFrame();};var MotionSpriteUtil = function() {{} };var P = MotionSpriteUtil.prototype;P.constructor = MotionSpriteUtil;P._t = {}; P._t["MotionSpriteUtil"] = true;MotionSpriteUtil.createInstance = function() {var _v = new MotionSpriteUtil();return(_v._construct());};P._construct = function() {return(this);};MotionSpriteUtil.addColorSpriteWithSceneAndSpriteLayerAndColorAndDouble = function(scene, layer, color, width) {return(MotionSpriteUtil.addColorSpriteWithSceneAndSpriteLayerAndColorAndDoubleAndDouble(scene, layer, color, width, 0.0));};MotionSpriteUtil.addColorSpriteWithSceneAndSpriteLayerAndColorAndDoubleAndDouble = function(scene, layer, color, width, height) {var text = scene.createTextureForColor(color);if((text) == (null)) {return(null);}return(layer.addTextureSpriteForSize(text, width, height));};MotionSpriteUtil.addTextureSpriteForWidth = function(scene, layer, texture, width) {return(layer.addTextureSpriteForSize(texture, width, 0.0));};MotionSpriteUtil.addTextureSpriteForHeight = function(scene, layer, texture, height) {return(layer.addTextureSpriteForSize(texture, 0.0, height));};MotionSpriteUtil.addTextureSpriteForSize = function(scene, layer, texture, width, height) {return(layer.addTextureSpriteForSize(texture, width, height));};MotionSpriteUtil.addTextSprite = function(scene, layer, text) {return(layer.addTextSprite(MotionTextProperties.forText(text)));};MotionSpriteUtil.addTextSpriteWithAbsoluteSize = function(scene, layer, text, size) {var tp = MotionTextProperties.forText(text);tp.setFontSizeAbsolute(size);return(layer.addTextSprite(tp));};MotionSpriteUtil.addTextSpriteWithRelativeSize = function(scene, layer, text, size) {var tp = MotionTextProperties.forText(text);tp.setFontSizeRelative(size);return(layer.addTextSprite(tp));};var MotionTextButtonEntity = function() {MotionMultiSpriteEntity.call(this);this.backgroundColor = null;this.pressedColor = null;this.text = null;this.boxSprite = null;this.textSprite = null;this.pressed = null;this.clickHandler = null;{} };var P = MotionTextButtonEntity.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionMultiSpriteEntity.prototype);P.constructor = MotionTextButtonEntity;P._t = {}; P._t["MotionTextButtonEntity"] = true;P._t["MotionMultiSpriteEntity"] = true;P._t["MotionEntity"] = true;P._t["CavePointerListener"] = true;MotionTextButtonEntity.forText = function(text) {var tp = MotionTextProperties.forText(text);tp.setFontSizeAbsolute(2.0);tp.setFontSizeDescription("5mm");return(MotionTextButtonEntity.forTextProperties(tp));};MotionTextButtonEntity.forTextProperties = function(text) {var v = MotionTextButtonEntity.createInstance();v.setText(text);return(v);};MotionTextButtonEntity.createInstance = function() {var _v = new MotionTextButtonEntity();return(_v._construct());};P._construct = function() {if(MotionMultiSpriteEntity.prototype._construct.call(this) == (null)) {return(null);}(this.clickHandler) = (null);(this.pressed) = (false);(this.textSprite) = (null);(this.boxSprite) = (null);(this.text) = (null);(this.pressedColor) = (null);(this.backgroundColor) = (null);(this.backgroundColor) = CaveColor.forRGB(128, 128, 128);(this.pressedColor) = CaveColor.white();return(this);};P.initialize = function() {MotionMultiSpriteEntity.prototype.initialize.call(this);var tt = this.text;if((tt) == (null)) {(tt) = MotionTextProperties.forText("Button");tt.setFontSizeAbsolute(2.0);}var bgc = this.backgroundColor;if((bgc) == (null)) {(bgc) = CaveColor.forRGBA(0, 0, 0, 0);}(this.boxSprite) = MotionSpriteUtil.addColorSpriteWithSceneAndSpriteLayerAndColorAndDouble(this.scene, this.layer, bgc, 0.1);(this.textSprite) = this.layer.addTextSprite(this.text);var th = this.textSprite.getHeight();this.boxSprite.resize(this.textSprite.getWidth() + (th), (th) * (2));this.layoutSprites(this.getX(), this.getY());};P.resize = function(width, height) {if((this.boxSprite) !== (null)) {this.boxSprite.resize(width, height);this.onLayout();}};P.onPressedChanged = function() {if(this.pressed) {this.boxSprite.setTexture(this.scene.createTextureForColor(this.pressedColor));}else {this.boxSprite.setTexture(this.scene.createTextureForColor(this.backgroundColor));}};P.cleanup = function() {MotionMultiSpriteEntity.prototype.cleanup.call(this);if((this.boxSprite) !== (null)) {this.boxSprite.removeFromContainer();(this.boxSprite) = (null);}if((this.textSprite) !== (null)) {this.textSprite.removeFromContainer();(this.textSprite) = (null);}};P.getWidth = function() {if((this.boxSprite) !== (null)) {return(this.boxSprite.getWidth());}return(0.0);};P.getHeight = function() {if((this.boxSprite) !== (null)) {return(this.boxSprite.getHeight());}return(0.0);};P.layoutSprites = function(x, y) {this.boxSprite.move(x, y);this.textSprite.move((x) + this.boxSprite.getWidth() / (2) - this.textSprite.getWidth() / (2), (y) + this.boxSprite.getHeight() / (2) - this.textSprite.getHeight() / (2));};P.onClicked = function() {if((this.clickHandler) !== (null)) {this.clickHandler();}};P.onPointerEvent = function(event) {if(event.isInside(this.getX(), this.getY(), this.getWidth(), this.getHeight()) === (false)) {if(this.pressed) {(this.pressed) = (false);this.onPressedChanged();}return(false);}if(this.pressed) {if((this.pressed) && event.action === (CavePointerEvent.CANCEL)) {(this.pressed) = (false);this.onPressedChanged();return(false);}if((this.pressed) && event.action === (CavePointerEvent.UP)) {(this.pressed) = (false);this.onPressedChanged();this.onClicked();return(false);}return(true);}if(event.action === (CavePointerEvent.DOWN)) {(this.pressed) = (true);this.onPressedChanged();return(true);}return(false);};P.getBackgroundColor = function() {return(this.backgroundColor);};P.setBackgroundColor = function(v) {(this.backgroundColor) = (v);return(this);};P.getPressedColor = function() {return(this.pressedColor);};P.setPressedColor = function(v) {(this.pressedColor) = (v);return(this);};P.getText = function() {return(this.text);};P.setText = function(v) {(this.text) = (v);return(this);};P.getClickHandler = function() {return(this.clickHandler);};P.setClickHandler = function(v) {(this.clickHandler) = (v);return(this);};var MotionTextProperties = function() {this.text = null;this.textColor = null;this.outlineColor = null;this.backgroundColor = null;this.fontFamily = null;this.fontResource = null;this.fontFile = null;this.fontIsItalic = null;this.fontIsBold = null;this.fontSizeRelative = null;this.fontSizeAbsolute = null;this.fontSizeDescription = null;{} };var P = MotionTextProperties.prototype;P.constructor = MotionTextProperties;P._t = {}; P._t["MotionTextProperties"] = true;MotionTextProperties.forText = function(tt) {var v = MotionTextProperties.createInstance();v.setText(tt);return(v);};MotionTextProperties.createInstance = function() {var _v = new MotionTextProperties();return(_v._construct());};P._construct = function() {(this.fontSizeDescription) = (null);(this.fontSizeAbsolute) = (1.0);(this.fontSizeRelative) = (0.0);(this.fontIsBold) = (false);(this.fontIsItalic) = (false);(this.fontFile) = (null);(this.fontResource) = (null);(this.fontFamily) = (null);(this.backgroundColor) = (null);(this.outlineColor) = (null);(this.textColor) = (null);(this.text) = (null);(this.textColor) = CaveColor.black();return(this);};P.getText = function() {return(this.text);};P.setText = function(v) {(this.text) = (v);return(this);};P.getTextColor = function() {return(this.textColor);};P.setTextColor = function(v) {(this.textColor) = (v);return(this);};P.getOutlineColor = function() {return(this.outlineColor);};P.setOutlineColor = function(v) {(this.outlineColor) = (v);return(this);};P.getBackgroundColor = function() {return(this.backgroundColor);};P.setBackgroundColor = function(v) {(this.backgroundColor) = (v);return(this);};P.getFontFamily = function() {return(this.fontFamily);};P.setFontFamily = function(v) {(this.fontFamily) = (v);return(this);};P.getFontResource = function() {return(this.fontResource);};P.setFontResource = function(v) {(this.fontResource) = (v);return(this);};P.getFontFile = function() {return(this.fontFile);};P.setFontFile = function(v) {(this.fontFile) = (v);return(this);};P.getFontIsItalic = function() {return(this.fontIsItalic);};P.setFontIsItalic = function(v) {(this.fontIsItalic) = (v);return(this);};P.getFontIsBold = function() {return(this.fontIsBold);};P.setFontIsBold = function(v) {(this.fontIsBold) = (v);return(this);};P.getFontSizeRelative = function() {return(this.fontSizeRelative);};P.setFontSizeRelative = function(v) {(this.fontSizeRelative) = (v);return(this);};P.getFontSizeAbsolute = function() {return(this.fontSizeAbsolute);};P.setFontSizeAbsolute = function(v) {(this.fontSizeAbsolute) = (v);return(this);};P.getFontSizeDescription = function() {return(this.fontSizeDescription);};P.setFontSizeDescription = function(v) {(this.fontSizeDescription) = (v);return(this);};var MotionBackendForHTMLElements = function() {this.scene = null;this.context = null;this.domElement = null;this.sceneManager = null;this.gameTime = null;this.isStarted = null;this.lastFrame = null;this.pointerEvent = null;this.keyEvent = null;this.isOpera = null;this.isWebkit = null;{} };var P = MotionBackendForHTMLElements.prototype;P.constructor = MotionBackendForHTMLElements;P._t = {}; P._t["MotionBackendForHTMLElements"] = true;P._t["MotionBackend"] = true;MotionBackendForHTMLElements.createInstance = function() {var _v = new MotionBackendForHTMLElements();return(_v._construct());};P._construct = function() {(this.isWebkit) = (false);(this.isOpera) = (false);(this.keyEvent) = CaveKeyEvent.createInstance();(this.pointerEvent) = CavePointerEvent.createInstance();(this.lastFrame) = (0.0);(this.isStarted) = (false);(this.gameTime) = (null);(this.sceneManager) = (null);(this.domElement) = (null);(this.context) = (null);(this.scene) = (null);return(this);};MotionBackendForHTMLElements.forScene = function(scene, context, domElement) {var v = MotionBackendForHTMLElements.createInstance();v.setScene(scene);v.setContext(context);v.setDomElement(domElement);v.initialize();return(v);};P.translateKeyCode = function(keycode, keychar, event) {var kc = 0;var sv = null;switch(keycode) {case 32: {(kc) = (CaveKeyEvent.KEY_SPACE);(sv) = (" ");break;}case 13: {(kc) = (CaveKeyEvent.KEY_ENTER);(sv) = ("\n");break;}case 9: {(kc) = (CaveKeyEvent.KEY_TAB);(sv) = ("\t");break;}case 27: {(kc) = (CaveKeyEvent.KEY_ESCAPE);break;}case 8: {(kc) = (CaveKeyEvent.KEY_BACKSPACE);break;}case 16: {(kc) = (CaveKeyEvent.KEY_SHIFT);break;}case 17: {(kc) = (CaveKeyEvent.KEY_CONTROL);break;}case 18: {(kc) = (CaveKeyEvent.KEY_ALT);break;}case 20: {(kc) = (CaveKeyEvent.KEY_CAPSLOCK);break;}case 144: {(kc) = (CaveKeyEvent.KEY_NUMLOCK);break;}case 37: {(kc) = (CaveKeyEvent.KEY_LEFT);break;}case 38: {(kc) = (CaveKeyEvent.KEY_UP);break;}case 39: {(kc) = (CaveKeyEvent.KEY_RIGHT);break;}case 40: {(kc) = (CaveKeyEvent.KEY_DOWN);break;}case 45: {(kc) = (CaveKeyEvent.KEY_INSERT);break;}case 46: {(kc) = (CaveKeyEvent.KEY_DELETE);break;}case 36: {(kc) = (CaveKeyEvent.KEY_HOME);break;}case 35: {(kc) = (CaveKeyEvent.KEY_END);break;}case 33: {(kc) = (CaveKeyEvent.KEY_PAGEUP);break;}case 34: {(kc) = (CaveKeyEvent.KEY_PAGEDOWN);break;}case 112: {(kc) = (CaveKeyEvent.KEY_F1);break;}case 113: {(kc) = (CaveKeyEvent.KEY_F2);break;}case 114: {(kc) = (CaveKeyEvent.KEY_F3);break;}case 115: {(kc) = (CaveKeyEvent.KEY_F4);break;}case 116: {(kc) = (CaveKeyEvent.KEY_F5);break;}case 117: {(kc) = (CaveKeyEvent.KEY_F6);break;}case 118: {(kc) = (CaveKeyEvent.KEY_F7);break;}case 119: {(kc) = (CaveKeyEvent.KEY_F8);break;}case 120: {(kc) = (CaveKeyEvent.KEY_F9);break;}case 121: {(kc) = (CaveKeyEvent.KEY_F10);break;}case 122: {(kc) = (CaveKeyEvent.KEY_F11);break;}case 123: {(kc) = (CaveKeyEvent.KEY_F12);break;}case 224: {(kc) = (CaveKeyEvent.KEY_SUPER);break;}case 91: {(kc) = (CaveKeyEvent.KEY_SUPER);break;}case 92: {(kc) = (CaveKeyEvent.KEY_SUPER);break;}case 93: {(kc) = (CaveKeyEvent.KEY_SUPER);break;}default: {(kc) = (CaveKeyEvent.KEY_NONE);(sv) = (keychar);break;}}event.setKeyCode(kc);event.setStringValue(sv);};P.onJSKeyDown = function(e) {var keycode = 0;var keychar = null;var shift = false;var alt = false;var ctrl = false;keychar = e.key;keycode = e.keyCode;shift = e.shiftKey;alt = e.altKey;ctrl = e.ctrlKey;if((this.isWebkit) && (ctrl)) {this.onJSKeyPress(e);return;}this.keyEvent.clear();this.keyEvent.setAction(CaveKeyEvent.ACTION_DOWN);this.translateKeyCode(keycode, keychar, this.keyEvent);this.keyEvent.setShift(shift);this.keyEvent.setControl(ctrl);this.keyEvent.setAlt(alt);this.onKeyEvent(this.keyEvent);if(this.keyEvent.isConsumed) {if(e.preventDefault) {e.preventDefault();}}};P.onJSKeyPress = function(e) {var keycode = 0;var charcode = 0;var shift = false;var alt = false;var ctrl = false;keycode = e.keyCode;if(this.isOpera) {charcode = e.which;}else if(this.isWebkit) {charcode = e.keyCode;}else {charcode = e.charCode;}shift = e.shiftKey;alt = e.altKey;ctrl = e.ctrlKey;this.keyEvent.clear();this.keyEvent.setAction(CaveKeyEvent.ACTION_DOWN);this.translateKeyCode(keycode, null, this.keyEvent);if((this.isOpera) === (false) && (this.isWebkit) === (false)) {if((keycode) > (0) && this.keyEvent.getKeyCode() !== (CaveKeyEvent.KEY_NONE)) {return;}}if((charcode) === (32) || (charcode) === (9) || (charcode) === (8)) {return;}if((charcode) > (0)) {var str = CapeString.forCharacter(String.fromCharCode(charcode));if(ctrl) {(str) = CapeString.toLowerCase(str);}this.keyEvent.setStringValue(str);this.keyEvent.setShift(shift);this.keyEvent.setControl(ctrl);this.keyEvent.setAlt(alt);this.onKeyEvent(this.keyEvent);if(this.keyEvent.isConsumed) {if(e.preventDefault) {e.preventDefault();}}}};P.onJSKeyUp = function(e) {var keycode = 0;var keychar = null;var shift = false;var alt = false;var ctrl = false;keychar = e.key;keycode = e.keyCode;shift = e.shiftKey;alt = e.altKey;ctrl = e.ctrlKey;this.keyEvent.clear();this.keyEvent.setAction(CaveKeyEvent.ACTION_UP);this.translateKeyCode(keycode, keychar, this.keyEvent);this.keyEvent.setShift(shift);this.keyEvent.setControl(ctrl);this.keyEvent.setAlt(alt);this.onKeyEvent(this.keyEvent);if(this.keyEvent.isConsumed) {if(e.preventDefault) {e.preventDefault();}}};P.initialize = function() {if(navigator.userAgent.indexOf("Opera") >= 0) {this.isOpera = true;}if(navigator.userAgent.indexOf("WebKit") >= 0) {this.isWebkit = true;}(this.sceneManager) = MotionSceneManager.createInstance();this.sceneManager.setContext(this.context);this.sceneManager.setBackend(this);this.sceneManager.pushScene(this.scene);this.sceneManager.initialize();var onDown = function(event){var posx = 0;var posy = 0;posx = event.clientX;posy = event.clientY;this.pointerEvent.isConsumed = (false);this.pointerEvent.action = (CavePointerEvent.DOWN);this.pointerEvent.pointerId = (0);this.pointerEvent.x = (posx);this.pointerEvent.y = (posy);this.onPointerEvent(this.pointerEvent);event.preventDefault();}.bind(this);var onMove = function(event){var posx = 0;var posy = 0;posx = event.clientX;posy = event.clientY;this.pointerEvent.isConsumed = (false);this.pointerEvent.action = (CavePointerEvent.MOVE);this.pointerEvent.pointerId = (0);this.pointerEvent.x = (posx);this.pointerEvent.y = (posy);this.onPointerEvent(this.pointerEvent);event.preventDefault();}.bind(this);var onUp = function(event){var posx = 0;var posy = 0;posx = event.clientX;posy = event.clientY;this.pointerEvent.isConsumed = (false);this.pointerEvent.action = (CavePointerEvent.UP);this.pointerEvent.pointerId = (0);this.pointerEvent.x = (posx);this.pointerEvent.y = (posy);this.onPointerEvent(this.pointerEvent);event.preventDefault();}.bind(this);CaveHTMLDOM.addEventListener(this.domElement, "touchstart", onDown);CaveHTMLDOM.addEventListener(this.domElement, "touchmove", onMove);CaveHTMLDOM.addEventListener(this.domElement, "touchend", onUp);CaveHTMLDOM.addEventListener(this.domElement, "mousedown", onDown);CaveHTMLDOM.addEventListener(this.domElement, "mousemove", onMove);CaveHTMLDOM.addEventListener(this.domElement, "mouseup", onUp);window.addEventListener('keydown', function(event) {this.onJSKeyDown(event)}.bind(this), false);window.addEventListener('keypress', function(event) {this.onJSKeyPress(event)}.bind(this), false);window.addEventListener('keyup', function(event) {this.onJSKeyUp(event)}.bind(this), false);};P.start = function() {(this.isStarted) = (true);this.sceneManager.start();requestAnimationFrame(function(e) { this.onAnimationFrame(e); }.bind(this));};P.stop = function() {this.sceneManager.stop();(this.isStarted) = (false);};P.cleanup = function() {this.sceneManager.cleanup();(this.sceneManager) = (null);};P.createSpriteLayer = function() {var ee = CaveHTMLDOM.createElement("div");CaveHTMLDOM.setStyle(ee, "position", "absolute");CaveHTMLDOM.setStyle(ee, "top", "0");CaveHTMLDOM.setStyle(ee, "left", "0");CaveHTMLDOM.setStyle(ee, "width", "100%");CaveHTMLDOM.setStyle(ee, "height", "100%");CaveHTMLDOM.setStyle(ee, "overflow", "hidden");CaveHTMLDOM.appendChild(this.domElement, ee);var v = MotionBackendForHTMLElements.MySpriteLayer.createInstance();v.setContext(this.context);v.setElement(ee);return(v);};P.createImageFromResource = function(name) {return(this.context.getResourceImage(name));};P.createTextureForImage = function(image) {var v = MotionBackendForHTMLElements.MyImageTexture.createInstance();v.image = (image);return(v);};P.createTextureForColor = function(color) {var v = MotionBackendForHTMLElements.MyColorTexture.createInstance();v.color = (color);return(v);};P.deleteSpriteLayer = function(layer) {var l = (((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (layer, "MotionBackendForHTMLElements.MySpriteLayer")) ? (layer) : (null));if((l) !== (null)) {l.removeFromContainer();}};P.deleteTexture = function(texture) {};P.deleteAllTextures = function() {};P.onPointerEvent = function(event) {event.x = event.x / (this.domElement.clientWidth);event.y = event.y / (this.domElement.clientHeight);var scene = this.sceneManager.getCurrentScene();if((scene) !== (null)) {scene.onPointerEvent(event);}};P.onKeyEvent = function(event) {var scene = this.sceneManager.getCurrentScene();if((scene) !== (null)) {scene.onKeyEvent(event);}};P.onAnimationFrame = function(timeMilliSeconds) {if((this.lastFrame) === (0)) {(this.lastFrame) = (timeMilliSeconds);}this.onTick(~~(timeMilliSeconds), ~~((timeMilliSeconds) - (this.lastFrame)));(this.lastFrame) = (timeMilliSeconds);if(this.isStarted) {requestAnimationFrame(function(e) { this.onAnimationFrame(e); }.bind(this));}};P.onTick = function(totalTime, deltaTime) {if((this.gameTime) == (null)) {(this.gameTime) = CapeTimeValue.createInstance();}this.gameTime.setMilliSeconds(totalTime);var scene = this.sceneManager.getCurrentScene();if((scene) !== (null)) {scene.tick(this.gameTime, (deltaTime) / (1000.0));}};P.getScene = function() {return(this.scene);};P.setScene = function(v) {(this.scene) = (v);return(this);};P.getContext = function() {return(this.context);};P.setContext = function(v) {(this.context) = (v);return(this);};P.getDomElement = function() {return(this.domElement);};P.setDomElement = function(v) {(this.domElement) = (v);return(this);};var P2 = P;MotionBackendForHTMLElements.MyColorTexture = function() {this.color = null;{} };var P = MotionBackendForHTMLElements.MyColorTexture.prototype;P.constructor = MotionBackendForHTMLElements.MyColorTexture;P._t = {}; P._t["MotionBackendForHTMLElements.MyColorTexture"] = true;P._t["MotionTexture"] = true;MotionBackendForHTMLElements.MyColorTexture.createInstance = function() {var _v = new MotionBackendForHTMLElements.MyColorTexture();return(_v._construct());};P._construct = function() {(this.color) = (null);return(this);};P = P2;P2 = null;var P2 = P;MotionBackendForHTMLElements.MyImageTexture = function() {this.image = null;{} };var P = MotionBackendForHTMLElements.MyImageTexture.prototype;P.constructor = MotionBackendForHTMLElements.MyImageTexture;P._t = {}; P._t["MotionBackendForHTMLElements.MyImageTexture"] = true;P._t["MotionTexture"] = true;MotionBackendForHTMLElements.MyImageTexture.createInstance = function() {var _v = new MotionBackendForHTMLElements.MyImageTexture();return(_v._construct());};P._construct = function() {(this.image) = (null);return(this);};P = P2;P2 = null;var P2 = P;MotionBackendForHTMLElements.DomElementSprite = function() {this.element = null;this.parent = null;this.widthFactor = null;this.heightFactor = null;this.myx = null;this.myy = null;this.mywidth = null;this.myheight = null;this.myAngle = null;this.myAlpha = null;this.scaleX = null;this.scaleY = null;{} };var P = MotionBackendForHTMLElements.DomElementSprite.prototype;P.constructor = MotionBackendForHTMLElements.DomElementSprite;P._t = {}; P._t["MotionBackendForHTMLElements.DomElementSprite"] = true;P._t["MotionSprite"] = true;MotionBackendForHTMLElements.DomElementSprite.createInstance = function() {var _v = new MotionBackendForHTMLElements.DomElementSprite();return(_v._construct());};P._construct = function() {(this.scaleY) = (1.0);(this.scaleX) = (1.0);(this.myAlpha) = (1.0);(this.myAngle) = (0.0);(this.myheight) = (0.0);(this.mywidth) = (0.0);(this.myy) = -(99999.9);(this.myx) = -(99999.9);(this.heightFactor) = (0.0);(this.widthFactor) = (0.0);(this.parent) = (null);(this.element) = (null);return(this);};P.getElement = function() {return(this.element);};P.setElement = function(value) {(this.element) = (value);if((this.element) !== (null)) {this.element.style.position = "absolute";}};P.setBackgroundColor = function(color) {var cc = CaveHTMLDOM.colorToRGBA(color);if(!((cc) == (null))) {this.element.style.backgroundColor = cc;}};P.move = function(x, y) {if((x) !== (this.myx) || (y) !== (this.myy)) {(this.myx) = (x);(this.myy) = (y);var rx = (x) * (this.widthFactor);var ry = (y) * (this.heightFactor);if(this.element != null) {this.element.style.left = ~~rx;this.element.style.top = ~~ry;}}};P.updateSizeAsPixels = function(wpx, hpx) {(this.mywidth) = (wpx) / (this.widthFactor);(this.myheight) = (hpx) / (this.heightFactor);};P.resize = function(w, h) {if((w) === (this.mywidth) && (h) === (this.myheight)) {return;}var wpx = ~~((w) * (this.widthFactor));var hpx = ~~((h) * (this.heightFactor));this.element.style.width = ~~wpx;this.element.style.height = ~~hpx;(this.mywidth) = (w);(this.myheight) = (h);};P.updateTransform = function() {if((this.element) == (null)) {return;}var ang = (this.myAngle) * (180.0) / (CapeMath.M_PI);var str = "rotate(" + CapeString.forInteger(~~(ang)) + "deg) scale(" + CapeString.forDouble(this.scaleX) + "," + CapeString.forDouble(this.scaleY) + ")";CaveHTMLDOM.setStyle(this.element, "transform", str);CaveHTMLDOM.setStyle(this.element, "webkitTransform", str);CaveHTMLDOM.setStyle(this.element, "msTransform", str);CaveHTMLDOM.setStyle(this.element, "oTransform", str);CaveHTMLDOM.setStyle(this.element, "mozTransform", str);};P.setRotation = function(angle) {if((this.myAngle) === (angle)) {return;}(this.myAngle) = (angle);this.updateTransform();};P.setAlpha = function(alpha) {var f = alpha;if((f) < (0)) {(f) = (0);}if((f) > (1)) {(f) = (1);}if((f) === (this.myAlpha)) {return;}this.element.style.opacity = f;(this.myAlpha) = (f);};P.scale = function(x, y) {if((x) === (this.scaleX) && (y) === (this.scaleY)) {return;}(this.scaleX) = (x);(this.scaleY) = (y);this.updateTransform();};P.getX = function() {return(this.myx);};P.getY = function() {return(this.myy);};P.getWidth = function() {return(this.mywidth);};P.getHeight = function() {return(this.myheight);};P.getRotation = function() {return(this.myAngle);};P.getAlpha = function() {return(this.myAlpha);};P.getScaleX = function() {return(this.scaleX);};P.getScaleY = function() {return(this.scaleY);};P.removeFromContainer = function() {if((this.element) == (null)) {return;}CaveHTMLDOM.remove(this.element);this.setElement(null);};P.getParent = function() {return(this.parent);};P.setParent = function(v) {(this.parent) = (v);return(this);};P.getWidthFactor = function() {return(this.widthFactor);};P.setWidthFactor = function(v) {(this.widthFactor) = (v);return(this);};P.getHeightFactor = function() {return(this.heightFactor);};P.setHeightFactor = function(v) {(this.heightFactor) = (v);return(this);};P = P2;P2 = null;var P2 = P;MotionBackendForHTMLElements.MyTextureSprite = function() {MotionBackendForHTMLElements.DomElementSprite.call(this);this.layer = null;{} };var P = MotionBackendForHTMLElements.MyTextureSprite.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionBackendForHTMLElements.DomElementSprite.prototype);P.constructor = MotionBackendForHTMLElements.MyTextureSprite;P._t = {}; P._t["MotionBackendForHTMLElements.MyTextureSprite"] = true;P._t["MotionBackendForHTMLElements.DomElementSprite"] = true;P._t["MotionSprite"] = true;P._t["MotionTextureSprite"] = true;P._t["MotionSprite"] = true;MotionBackendForHTMLElements.MyTextureSprite.createInstance = function() {var _v = new MotionBackendForHTMLElements.MyTextureSprite();return(_v._construct());};P._construct = function() {if(MotionBackendForHTMLElements.DomElementSprite.prototype._construct.call(this) == (null)) {return(null);}(this.layer) = (null);return(this);};P.setTexture = function(texture) {this.setTextureWithSize(texture, this.getWidth(), this.getHeight());};P.setTextureWithSize = function(texture, width, height) {if((texture) == (null) || (width) <= (0.0) && (height) <= (0.0)) {return;}var w = width;var h = height;var imgt = (((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (texture, "MotionBackendForHTMLElements.MyImageTexture")) ? (texture) : (null));if((imgt) !== (null)) {var image = imgt.image;if((image) !== (null)) {if((w) <= (0.0)) {(w) = image.getPixelWidth() * (h) / image.getPixelHeight();}if((h) <= (0.0)) {(h) = image.getPixelHeight() * (w) / image.getPixelWidth();}}}if((w) <= (0.0)) {(w) = (h);}if((h) <= (0.0)) {(h) = (w);}if((w) <= (0.0) || (h) <= (0.0)) {return;}if(((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (texture, "MotionBackendForHTMLElements.MyColorTexture"))) {if((this.element) == (null)) {this.setElement(CaveHTMLDOM.createElement("div"));CaveHTMLDOM.appendChild(this.parent, this.element);}this.resize(w, h);this.setBackgroundColor(texture.color);return;}if(((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (texture, "MotionBackendForHTMLElements.MyImageTexture"))) {var timg = texture.image;var img = null;if(((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (timg, "CaveImageForHTML"))) {(img) = (timg);}if((img) == (null)) {return;}var bm = img.image;if((bm) == (null)) {return;}if((this.element) == (null)) {this.setElement(CaveHTMLDOM.createElement("img"));CaveHTMLDOM.appendChild(this.parent, this.element);this.element.src = bm.src;}this.resize(w, h);return;}console.log("[motion.BackendForHTMLElements.MyTextureSprite.setTextureWithSize] (BackendForHTMLElements@target_html.sling:279:2): Unknown texture type");};P.getLayer = function() {return(this.layer);};P.setLayer = function(v) {(this.layer) = (v);return(this);};P = P2;P2 = null;var P2 = P;MotionBackendForHTMLElements.MyTextSprite = function() {MotionBackendForHTMLElements.DomElementSprite.call(this);this.context = null;{} };var P = MotionBackendForHTMLElements.MyTextSprite.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionBackendForHTMLElements.DomElementSprite.prototype);P.constructor = MotionBackendForHTMLElements.MyTextSprite;P._t = {}; P._t["MotionBackendForHTMLElements.MyTextSprite"] = true;P._t["MotionBackendForHTMLElements.DomElementSprite"] = true;P._t["MotionSprite"] = true;P._t["MotionTextSprite"] = true;P._t["MotionSprite"] = true;MotionBackendForHTMLElements.MyTextSprite.createInstance = function() {var _v = new MotionBackendForHTMLElements.MyTextSprite();return(_v._construct());};P._construct = function() {if(MotionBackendForHTMLElements.DomElementSprite.prototype._construct.call(this) == (null)) {return(null);}(this.context) = (null);return(this);};P.setText = function(desc) {if((desc) == (null)) {if((this.element) !== (null)) {CaveHTMLDOM.setInnerHTML(this.element, "");}return;}if((this.element) == (null)) {this.setElement(CaveHTMLDOM.createElement("div"));CaveHTMLDOM.setStyle(this.element, "cursor", "default");CaveHTMLDOM.setStyle(this.element, "white-space", "nowrap");CaveHTMLDOM.appendChild(this.parent, this.element);}var textColor = desc.getTextColor();if((textColor) !== (null)) {var cc = CaveHTMLDOM.colorToRGBA(textColor);this.element.style.color = cc;}var fontFamily = desc.getFontFamily();if(CapeString.isEmpty(fontFamily)) {(fontFamily) = ("Arial");}if(CapeString.isEmpty(fontFamily) === (false)) {this.element.style.fontFamily = fontFamily;}var fontResource = desc.getFontResource();if(CapeString.isEmpty(fontResource) === (false)) {console.log("[motion.BackendForHTMLElements.MyTextSprite.setText] (BackendForHTMLElements@target_html.sling:319:3): Not implemented: font resource support");}var fontFile = desc.getFontFile();if((fontFile) !== (null)) {console.log("[motion.BackendForHTMLElements.MyTextSprite.setText] (BackendForHTMLElements@target_html.sling:323:3): Not implemented: font file support");}if(desc.getFontIsBold()) {this.element.style.fontWeight = "bold";}if(desc.getFontIsItalic()) {this.element.style.fontStyle = "italic";}this.setBackgroundColor(desc.getBackgroundColor());CaveHTMLDOM.setInnerHTML(this.element, desc.getText());var hsz = 0.0;var fsDesc = desc.getFontSizeDescription();if(CapeString.isEmpty(fsDesc) === (false)) {var density = 0;if((this.context) !== (null)) {(density) = this.context.getScreenDensity();}else {(density) = (96);}(hsz) = CaveLength.asPoints(fsDesc, density);}else {var fsRelative = desc.getFontSizeRelative();var fsAbsolute = desc.getFontSizeAbsolute();if((fsRelative) > (0.0)) {(hsz) = this.getHeightFactor() * (fsRelative);}else {(hsz) = (fsAbsolute) * (18);}}this.element.style.fontSize = hsz;var msw = 0;var msh = 0;msw = this.element.offsetWidth;msh = this.element.offsetHeight;this.updateSizeAsPixels(msw, msh);};P.getContext = function() {return(this.context);};P.setContext = function(v) {(this.context) = (v);return(this);};P = P2;P2 = null;var P2 = P;MotionBackendForHTMLElements.MySpriteLayer = function() {MotionBackendForHTMLElements.DomElementSprite.call(this);this.context = null;this.referenceWidth = null;this.referenceHeight = null;this.layerWidthFactor = null;this.layerHeightFactor = null;this.ppi = null;{} };var P = MotionBackendForHTMLElements.MySpriteLayer.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (MotionBackendForHTMLElements.DomElementSprite.prototype);P.constructor = MotionBackendForHTMLElements.MySpriteLayer;P._t = {}; P._t["MotionBackendForHTMLElements.MySpriteLayer"] = true;P._t["MotionBackendForHTMLElements.DomElementSprite"] = true;P._t["MotionSprite"] = true;P._t["MotionSpriteLayer"] = true;MotionBackendForHTMLElements.MySpriteLayer.createInstance = function() {var _v = new MotionBackendForHTMLElements.MySpriteLayer();return(_v._construct());};P._construct = function() {if(MotionBackendForHTMLElements.DomElementSprite.prototype._construct.call(this) == (null)) {return(null);}(this.ppi) = -(1);(this.layerHeightFactor) = (0.0);(this.layerWidthFactor) = (0.0);(this.referenceHeight) = (0.0);(this.referenceWidth) = (1.0);(this.context) = (null);return(this);};P.getLayerWidthFactor = function() {if((this.layerWidthFactor) === (0.0) && (this.referenceWidth) > (0.0)) {var rwidth = 0.0;rwidth = this.element.offsetWidth;(this.layerWidthFactor) = (rwidth) / (this.referenceWidth);}return(this.layerWidthFactor);};P.getLayerHeightFactor = function() {if((this.layerHeightFactor) === (0.0)) {var rh = this.getReferenceHeight();if((rh) > (0.0)) {var rheight = 0.0;rheight = this.element.offsetHeight;(this.layerHeightFactor) = (rheight) / (rh);}}return(this.layerHeightFactor);};P.addTextureSpriteForSize = function(texture, width, height) {var v = MotionBackendForHTMLElements.MyTextureSprite.createInstance();v.setParent(this.element);v.setWidthFactor(this.getLayerWidthFactor());v.setHeightFactor(this.getLayerHeightFactor());v.setLayer(this);v.setTextureWithSize(texture, width, height);return(v);};P.addTextSprite = function(text) {var v = MotionBackendForHTMLElements.MyTextSprite.createInstance();v.setContext(this.context);v.setParent(this.element);v.setWidthFactor(this.getLayerWidthFactor());v.setHeightFactor(this.getLayerHeightFactor());v.setText(text);return(v);};P.addContainerSprite = function(width, height) {console.log("[motion.BackendForHTMLElements.MySpriteLayer.addContainerSprite] (BackendForHTMLElements@target_html.sling:432:2): Not implemented");return(null);};P.removeSprite = function(sprite) {var sp = (((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (sprite, "MotionBackendForHTMLElements.DomElementSprite")) ? (sprite) : (null));if((sp) !== (null)) {sp.removeFromContainer();}};P.removeAllSprites = function() {CaveHTMLDOM.setInnerHTML(this.element, "");};P.setReferenceWidth = function(rw) {(this.referenceWidth) = (rw);};P.setReferenceHeight = function(rh) {(this.referenceHeight) = (rh);};P.getReferenceWidth = function() {return(this.referenceWidth);};P.getReferenceHeight = function() {if((this.referenceHeight) > (0.0)) {return(this.referenceHeight);}var ww = 0.0;var hh = 0.0;ww = this.element.offsetWidth;hh = this.element.offsetHeight;return((hh) * (this.referenceWidth) / (ww));};P.getPPI = function() {if((this.ppi) < (0)) {if((this.context) !== (null)) {(this.ppi) = this.context.getScreenDensity();}if((this.ppi) < (0)) {(this.ppi) = (96);}}return(this.ppi);};P.getHeightValue = function(spec) {return(CaveLength.asPoints(spec, this.getPPI()) / this.getLayerHeightFactor());};P.getWidthValue = function(spec) {return(CaveLength.asPoints(spec, this.getPPI()) / this.getLayerWidthFactor());};P.getContext = function() {return(this.context);};P.setContext = function(v) {(this.context) = (v);return(this);};P = P2;P2 = null;