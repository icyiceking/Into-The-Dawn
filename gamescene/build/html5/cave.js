
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2017 Job and Esther Technologies, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

"use strict";var CaveColor = function() {this.red = null;this.green = null;this.blue = null;this.alpha = null;{} };var P = CaveColor.prototype;P.constructor = CaveColor;CaveColor.colorBlack = null;CaveColor.colorWhite = null;P._t = {}; P._t["CaveColor"] = true;CaveColor.black = function() {if((CaveColor.colorBlack) == (null)) {(CaveColor.colorBlack) = CaveColor.instance("black");}return(CaveColor.colorBlack);};CaveColor.white = function() {if((CaveColor.colorWhite) == (null)) {(CaveColor.colorWhite) = CaveColor.instance("white");}return(CaveColor.colorWhite);};CaveColor.asColorWithString = function(o) {return(CaveColor.createInstanceWithString(o));};CaveColor.asColorWithObject = function(o) {if((o) == (null)) {return(null);}if(((function(o, t) {return(o != null && o._t != null && o._t[t] === true);}) (o, "CaveColor"))) {return(o);}return(null);};CaveColor.instance = function(str) {if((str) === ("none")) {return(null);}var v = CaveColor.createInstance();if(!((str) == (null))) {if(v.parse(str) === (false)) {(v) = (null);}}return(v);};CaveColor.forString = function(str) {if((str) === ("none")) {return(null);}var v = CaveColor.createInstance();if(!((str) == (null))) {if(v.parse(str) === (false)) {(v) = (null);}}return(v);};CaveColor.forRGBDouble = function(r, g, b) {var v = CaveColor.createInstance();v.setRed(r);v.setGreen(g);v.setBlue(b);v.setAlpha(1.0);return(v);};CaveColor.forRGBADouble = function(r, g, b, a) {var v = CaveColor.createInstance();v.setRed(r);v.setGreen(g);v.setBlue(b);v.setAlpha(a);return(v);};CaveColor.forRGB = function(r, g, b) {var v = CaveColor.createInstance();v.setRed((r) / (255.0));v.setGreen((g) / (255.0));v.setBlue((b) / (255.0));v.setAlpha(1.0);return(v);};CaveColor.forRGBA = function(r, g, b, a) {var v = CaveColor.createInstance();v.setRed((r) / (255.0));v.setGreen((g) / (255.0));v.setBlue((b) / (255.0));v.setAlpha((a) / (255.0));return(v);};CaveColor.createInstance = function() {var _v = new CaveColor();return(_v._construct());};P._construct = function() {(this.alpha) = (0.0);(this.blue) = (0.0);(this.green) = (0.0);(this.red) = (0.0);return(this);};CaveColor.createInstanceWithString = function(str) {var _v = new CaveColor();return(_v._constructString(str));};P._constructString = function(str) {(this.alpha) = (0.0);(this.blue) = (0.0);(this.green) = (0.0);(this.red) = (0.0);this.parse(str);return(this);};P.isWhite = function() {if((this.red) + (this.green) + (this.blue) >= (3.0)) {return(true);}return(false);};P.isBlack = function() {if((this.red) + (this.green) + (this.blue) <= (0)) {return(true);}return(false);};P.isLightColor = function() {if((this.red) + (this.green) + (this.blue) >= (1.5)) {return(true);}return(false);};P.isDarkColor = function() {return(!this.isLightColor());};P.hexCharToInt = function(c) {if((c).charCodeAt() >= ('0').charCodeAt() && (c).charCodeAt() <= ('9').charCodeAt()) {return((c.charCodeAt()) - ('0'.charCodeAt()));}if((c).charCodeAt() >= ('a').charCodeAt() && (c).charCodeAt() <= ('f').charCodeAt()) {return(10 + ((c).charCodeAt()) - (('a').charCodeAt()));}if((c).charCodeAt() >= ('A').charCodeAt() && (c).charCodeAt() <= ('F').charCodeAt()) {return(10 + ((c).charCodeAt()) - (('A').charCodeAt()));}return(0);};P.hexDigitToInt = function(hx) {if(CapeString.isEmpty(hx)) {return(0);}var c0 = this.hexCharToInt(CapeString.charAt(hx, 0));if(CapeString.getLength(hx) < (2)) {return(c0);}return((c0) * (16) + this.hexCharToInt(CapeString.charAt(hx, 1)));};P.parse = function(s) {if((s) == (null)) {(this.red) = (0.0);(this.green) = (0.0);(this.blue) = (0.0);(this.alpha) = (1.0);return(true);}var v = true;(this.alpha) = (1.0);if(CapeString.charAt(s, 0) === ('#')) {var slength = CapeString.getLength(s);if((slength) === (7) || (slength) === (9)) {(this.red) = this.hexDigitToInt(CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(s, 1, 2)) / (255.0);(this.green) = this.hexDigitToInt(CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(s, 3, 2)) / (255.0);(this.blue) = this.hexDigitToInt(CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(s, 5, 2)) / (255.0);if((slength) === (9)) {(this.alpha) = this.hexDigitToInt(CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(s, 7, 2)) / (255.0);}(v) = (true);}else {(this.red) = (this.green) = (this.blue) = (0.0);(v) = (false);}}else {if((s) === ("black")) {(this.red) = (0.0);(this.green) = (0.0);(this.blue) = (0.0);}else {if((s) === ("white")) {(this.red) = (1.0);(this.green) = (1.0);(this.blue) = (1.0);}else {if((s) === ("red")) {(this.red) = (1.0);(this.green) = (0.0);(this.blue) = (0.0);}else {if((s) === ("green")) {(this.red) = (0.0);(this.green) = (1.0);(this.blue) = (0.0);}else {if((s) === ("blue")) {(this.red) = (0.0);(this.green) = (0.0);(this.blue) = (1.0);}else {if((s) === ("lightred")) {(this.red) = (0.6);(this.green) = (0.4);(this.blue) = (0.4);}else {if((s) === ("lightgreen")) {(this.red) = (0.4);(this.green) = (0.6);(this.blue) = (0.4);}else {if((s) === ("lightblue")) {(this.red) = (0.4);(this.green) = (0.4);(this.blue) = (0.6);}else {if((s) === ("yellow")) {(this.red) = (1.0);(this.green) = (1.0);(this.blue) = (0.0);}else {if((s) === ("cyan")) {(this.red) = (0.0);(this.green) = (1.0);(this.blue) = (1.0);}else {if((s) === ("orange")) {(this.red) = (1.0);(this.green) = (0.5);(this.blue) = (0.0);}else {(v) = (false);}}}}}}}}}}}}return(v);};P.decimalStringToInteger = function(str) {if(CapeString.isEmpty(str)) {return(0);}var v = 0;var m = CapeString.getLength(str);var n = 0;for((n) = (0) ; (n) < (m) ; (n)++) {var c = CapeString.charAt(str, n);if((c).charCodeAt() >= ('0').charCodeAt() && (c).charCodeAt() <= ('9').charCodeAt()) {(v) = (v) * (10);(v) += ((c).charCodeAt() - ('0').charCodeAt());}else {break;}}return(v);};P.dup = function(arg) {var f = 1.0;if(!((arg) == (null))) {if((arg) === ("light")) {(f) = (1.2);}else {if((arg) === ("dark")) {(f) = (0.8);}else {if(CapeString.endsWithWithStringAndString(arg, "%")) {(f) = (this.decimalStringToInteger(arg)) / (100.0);}}}}var v = CaveColor.createInstance();if((f) > (1.0)) {v.setRed((this.red) + ((1.0) - (this.red)) * ((f) - (1.0)));v.setGreen((this.green) + ((1.0) - (this.green)) * ((f) - (1.0)));v.setBlue((this.blue) + ((1.0) - (this.blue)) * ((f) - (1.0)));}else {if((f) < (1.0)) {v.setRed((this.red) * (f));v.setGreen((this.green) * (f));v.setBlue((this.blue) * (f));}else {v.setRed(this.red);v.setGreen(this.green);v.setBlue(this.blue);}}v.setAlpha(this.alpha);return(v);};P.toRGBAInt32 = function() {var v = 0;(v) |= ((~~((this.red) * (255))) & (255)) << (24);(v) |= ((~~((this.green) * (255))) & (255)) << (16);(v) |= ((~~((this.blue) * (255))) & (255)) << (8);(v) |= ((~~((this.alpha) * (255))) & (255));return(v);};P.toARGBInt32 = function() {var v = 0;(v) |= ((~~((this.alpha) * (255))) & (255)) << (24);(v) |= ((~~((this.red) * (255))) & (255)) << (16);(v) |= ((~~((this.green) * (255))) & (255)) << (8);(v) |= ((~~((this.blue) * (255))) & (255));return(v);};P.toString = function() {return(this.toRgbaString());};P.toRgbString = function() {var r = CapeString.forIntegerHex(~~((this.red) * (255)));var g = CapeString.forIntegerHex(~~((this.green) * (255)));var b = CapeString.forIntegerHex(~~((this.blue) * (255)));var sb = CapeStringBuilder.createInstance();sb.appendString("#");this.to2Digits(r, sb);this.to2Digits(g, sb);this.to2Digits(b, sb);return(sb.toString());};P.toRgbaString = function() {var a = CapeString.forIntegerHex(~~((this.alpha) * (255)));return(this.toRgbString() + a);};P.to2Digits = function(val, sb) {if(CapeString.getLength(val) === (1)) {sb.appendCharacter('0');}sb.appendString(val);};P.getRed = function() {return(this.red);};P.setRed = function(v) {(this.red) = (v);return(this);};P.getGreen = function() {return(this.green);};P.setGreen = function(v) {(this.green) = (v);return(this);};P.getBlue = function() {return(this.blue);};P.setBlue = function(v) {(this.blue) = (v);return(this);};P.getAlpha = function() {return(this.alpha);};P.setAlpha = function(v) {(this.alpha) = (v);return(this);};var CaveFontDescription = function() {this.file = null;this.name = null;this.bold = null;this.italic = null;this.underline = null;this.size = null;{} };var P = CaveFontDescription.prototype;P.constructor = CaveFontDescription;P._t = {}; P._t["CaveFontDescription"] = true;CaveFontDescription.forDefault = function() {return(CaveFontDescription.createInstance());};P.forFile = function(file, size) {var v = CaveFontDescription.createInstance();v.setFile(file);if((size) !== (null)) {v.setSize(size);}return(v);};P.forName = function(name, size) {var v = CaveFontDescription.createInstance();v.setName(name);if((size) !== (null)) {v.setSize(size);}return(v);};CaveFontDescription.createInstance = function() {var _v = new CaveFontDescription();return(_v._construct());};P._construct = function() {(this.size) = (null);(this.underline) = (false);(this.italic) = (false);(this.bold) = (false);(this.name) = (null);(this.file) = (null);(this.file) = (null);(this.name) = ("Sans");(this.size) = CaveLength.forMicroMeters(2500);(this.bold) = (false);(this.italic) = (false);(this.underline) = (false);return(this);};P.dup = function() {var v = CaveFontDescription.createInstance();v.file = (this.file);v.name = (this.name);v.bold = (this.bold);v.italic = (this.italic);v.underline = (this.underline);v.size = (this.size);return(v);};P.getFile = function() {return(this.file);};P.setFile = function(v) {(this.file) = (v);return(this);};P.getName = function() {return(this.name);};P.setName = function(v) {(this.name) = (v);return(this);};P.getBold = function() {return(this.bold);};P.setBold = function(v) {(this.bold) = (v);return(this);};P.getItalic = function() {return(this.italic);};P.setItalic = function(v) {(this.italic) = (v);return(this);};P.getUnderline = function() {return(this.underline);};P.setUnderline = function(v) {(this.underline) = (v);return(this);};P.getSize = function() {return(this.size);};P.setSize = function(v) {(this.size) = (v);return(this);};var CaveGuiApplicationContextForHTML = function() {this.imageCache = null;{} };var P = CaveGuiApplicationContextForHTML.prototype;P.constructor = CaveGuiApplicationContextForHTML;P._t = {}; P._t["CaveGuiApplicationContextForHTML"] = true;P._t["CaveGuiApplicationContext"] = true;P._t["CapeApplicationContext"] = true;P._t["CapeLoggingContext"] = true;CaveGuiApplicationContextForHTML.createInstance = function() {var _v = new CaveGuiApplicationContextForHTML();return(_v._construct());};P._construct = function() {(this.imageCache) = (new Map());return(this);};P.clearResources = function() {(this.imageCache) = (new Map());};P.prepareResources = function(resources, callback) {if((resources) == (null) || (resources.length) < (1)) {if((callback) !== (null)) {callback();}return;}var loadedResources = 0;var totalResources = resources.length;var onResourceLoadingComplete = function(){(loadedResources)++;if((loadedResources) >= (totalResources)) {this.logInfo("All resources have been loaded");if((callback) !== (null)) {callback();}}}.bind(this);var onLoad = function(){this.logDebug("Resource loaded");onResourceLoadingComplete();}.bind(this);var onError = function(){this.logError("Failed to load resource");onResourceLoadingComplete();}.bind(this);var style = null;if((resources) !== (null)) {var n = 0;var m = resources.length;for((n) = (0) ; (n) < (m) ; (n)++) {var path = resources[n];if((path) !== (null)) {var pp = path;var slash = CapeString.lastIndexOfWithStringAndCharacterAndSignedInteger(pp, '/', -(1));if((slash) >= (0)) {(pp) = CapeString.getSubStringWithStringAndSignedInteger(pp, (slash) + (1));}var dot = CapeString.lastIndexOfWithStringAndCharacterAndSignedInteger(pp, '.', -(1));if((dot) < (0)) {onResourceLoadingComplete();continue;}var ext = CapeString.getSubStringWithStringAndSignedInteger(pp, (dot) + (1));(pp) = CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(pp, 0, dot);if(CapeString.equalsIgnoreCase(ext, "png") || CapeString.equalsIgnoreCase(ext, "jpg") || CapeString.equalsIgnoreCase(ext, "gif")) {this.logDebug("Start loading resource: `" + pp + ": `" + path + "'");var imgo = CaveImageForHTML.createInstance();var image = null;image = new Image();image.onload = onLoad;image.onerror = onError;image.src = path;imgo.image = (image);(this.imageCache).set(pp, (imgo));}else {if(CapeString.equalsIgnoreCase(ext, "otf") || CapeString.equalsIgnoreCase(ext, "ttf")) {this.logDebug("Start loading resource: `" + pp + ": `" + path + "'");if(CaveHTMLDOM.doesBrowserSupportFontLoading()) {var head = CaveHTMLDOM.getDocumentHead();if((style) == (null)) {(style) = CaveHTMLDOM.createElement("style");CaveHTMLDOM.appendChild(head, style);}CaveHTMLDOM.appendChild(style, CaveHTMLDOM.createTextNode("@font-face { font-family: " + pp + "; src: url('" + path + "')}"));document.fonts.load("12px " + pp).then(onLoad, onError);}else {this.logWarning("Browser does not support font loading: `" + path + "'");onResourceLoadingComplete();}}else {this.logWarning("Unsupported resource file type `" + ext + "': `" + path + "'");onResourceLoadingComplete();}}}}}};P.getResourceImage = function(id) {return(CapeMap.getValue(this.imageCache, id));};P.getImageForBuffer = function(buffer, mimeType) {if((buffer) == (null)) {return(null);}var b64str = CapexBase64Encoder.encode(buffer);var imgo = CaveImageForHTML.createInstance();var image = null;image = new Image();image.src = "data:" + mimeType + ";base64," + b64str;imgo.image = (image);return(imgo);};P.logError = function(message) {console.log("[ERROR] " + message);};P.logWarning = function(message) {console.log("[WARNING] " + message);};P.logInfo = function(message) {console.log("[INFO] " + message);};P.logDebug = function(message) {console.log("[DEBUG] " + message);};P.showConfirmDialog = function(title, message, okcallback, cancelcallback) {var result = false;result = confirm(message);if(result) {if((okcallback) !== (null)) {okcallback();}}else {if((cancelcallback) !== (null)) {cancelcallback();}}};P.showMessageDialogWithStringAndString = function(title, message) {this.showMessageDialogWithStringAndStringAndFunction(title, message, null);};P.showMessageDialogWithStringAndStringAndFunction = function(title, message, callback) {window.alert(message);if((callback) !== (null)) {callback();}};P.showErrorDialogWithString = function(message) {this.showErrorDialogWithStringAndFunction(message, null);};P.showErrorDialogWithStringAndFunction = function(message, callback) {window.alert(message);if((callback) !== (null)) {callback();}};P.getScreenTopMargin = function() {return(0);};P.getScreenWidth = function() {var v = 0;v = window.screen.availWidth;return(v);};P.getScreenHeight = function() {var v = 0;v = window.screen.availHeight;return(v);};P.getScreenDensity = function() {var ppi = 0;var div = document.createElement("div");div.setAttribute("style", "width: 1.3in; padding: 0; visibility: hidden; position: fixed; left: 0; top: 0;");var bodys = document.getElementsByTagName("body");bodys[0].appendChild(div);ppi = div.offsetWidth;if(ppi < 1) {ppi = 1;}bodys[0].removeChild(div);var qs = CapeEnvironment.getQueryString();if(CapeString.isEmpty(qs) === (false)) {var array = CapeString.split(qs, '&', 0);if((array) !== (null)) {var n = 0;var m = array.length;for((n) = (0) ; (n) < (m) ; (n)++) {var q = array[n];if((q) !== (null)) {if(CapeString.startsWithWithStringAndStringAndSignedInteger(q, "jkopDpi=", 0) === (false)) {continue;}var val = CapeString.getSubStringWithStringAndSignedInteger(q, 8);if(CapeString.isEmpty(val) === (false)) {(ppi) = CapeString.toInteger(val);}break;}}}}return(ppi);};P.getHeightValue = function(spec) {return(CaveLength.asPoints(spec, this.getScreenDensity()));};P.getWidthValue = function(spec) {return(CaveLength.asPoints(spec, this.getScreenDensity()));};P.startTimer = function(timeout, callback) {setTimeout(callback, timeout);};var CaveHTMLDOM = function() {{} };var P = CaveHTMLDOM.prototype;P.constructor = CaveHTMLDOM;P._t = {}; P._t["CaveHTMLDOM"] = true;CaveHTMLDOM.createInstance = function() {var _v = new CaveHTMLDOM();return(_v._construct());};P._construct = function() {return(this);};CaveHTMLDOM.colorToRGBA = function(color) {if((color) == (null)) {return(null);}var sb = CapeStringBuilder.createInstance();sb.appendString("rgba(");sb.appendString(CapeString.forInteger(~~(color.getRed() * (255))));sb.appendCharacter(',');sb.appendString(CapeString.forInteger(~~(color.getGreen() * (255))));sb.appendCharacter(',');sb.appendString(CapeString.forInteger(~~(color.getBlue() * (255))));sb.appendCharacter(',');sb.appendString(CapeString.forDouble(color.getAlpha()));sb.appendString(")");return(sb.toString());};CaveHTMLDOM.createElement = function(type) {return(document.createElement(type));};CaveHTMLDOM.getDocument = function() {return(document);};CaveHTMLDOM.getDocumentBody = function() {return(CaveHTMLDOM.getElementsByTagName(CaveHTMLDOM.getDocument(), "body")[0]);};CaveHTMLDOM.getDocumentHead = function() {return(CaveHTMLDOM.getElementsByTagName(CaveHTMLDOM.getDocument(), "head")[0]);};CaveHTMLDOM.getParentElement = function(element) {if((element) == (null)) {return(null);}return(element.parentElement);};CaveHTMLDOM.getElementByIdWithString = function(id) {return(CaveHTMLDOM.getElementByIdWithObjectAndString(CaveHTMLDOM.getDocument(), id));};CaveHTMLDOM.getElementByIdWithObjectAndString = function(element, id) {if((element) == (null) || (id) == (null)) {return(null);}return(element.getElementById(id));};CaveHTMLDOM.getElementsByClassName = function(element, classname) {if((element) == (null) || (classname) == (null)) {return(null);}return(element.getElementsByClassName(classname));};CaveHTMLDOM.getElementsByTagName = function(element, tagname) {if((element) == (null) || (tagname) == (null)) {return(null);}return(element.getElementsByTagName(tagname));};CaveHTMLDOM.appendChild = function(element, child) {if((element) == (null) || (child) == (null)) {return;}element.appendChild(child);};CaveHTMLDOM.appendToBody = function(element) {CaveHTMLDOM.appendChild(CaveHTMLDOM.getDocumentBody(), element);};CaveHTMLDOM.remove = function(element) {if((element) == (null)) {return;}var parent = CaveHTMLDOM.getParentElement(element);if((parent) == (null)) {return;}parent.removeChild(element);};CaveHTMLDOM.getFirstChild = function(element) {if((element) == (null)) {return(null);}return(element.firstChild);};CaveHTMLDOM.getChild = function(element, index) {if((element) == (null)) {return(null);}return(element.childNodes[index]);};CaveHTMLDOM.getAttribute = function(element, attr) {if((element) == (null) || CapeString.isEmpty(attr)) {return(null);}return(element.getAttribute(attr));};CaveHTMLDOM.setAttribute = function(element, attr, val) {if((element) == (null) || (attr) == (null)) {return;}if((val) == (null)) {element.removeAttribute(attr);}else {element.setAttribute(attr, val);}};CaveHTMLDOM.getInnerHTML = function(element) {if((element) == (null)) {return(null);}return(element.innerHTML);};CaveHTMLDOM.setInnerHTML = function(element, text) {if((element) == (null)) {return;}element.innerHTML = text;};P.setValue = function(element, val) {if((element) == (null)) {return;}element.value = val;};CaveHTMLDOM.getValue = function(element) {if((element) == (null)) {return(null);}return(element.value);};CaveHTMLDOM.setStyle = function(element, key, val) {if((element) == (null) || CapeString.isEmpty(key)) {return;}var v = val;if(CapeString.isEmpty(val)) {(v) = ("");}element.style[key] = v;};CaveHTMLDOM.getStyle = function(element, key) {if((element) == (null) || CapeString.isEmpty(key)) {return(null);}return(element.style[key]);};CaveHTMLDOM.removeStyle = function(element, key) {if((element) == (null) || CapeString.isEmpty(key)) {return;}element.style[key] = null;};CaveHTMLDOM.addEventListener = function(element, event, listener) {if((element) == (null) || CapeString.isEmpty(event) || (listener) == (null)) {return;}element.addEventListener(event, listener);};CaveHTMLDOM.getClassList = function(element) {if((element) == (null)) {return(null);}return(element.classList);};CaveHTMLDOM.addToClassList = function(element, xclass) {if((element) == (null) || (xclass) == (null)) {return;}element.classList.add(xclass);};CaveHTMLDOM.removeFromClassList = function(element, xclass) {if((element) == (null) || (xclass) == (null)) {return;}element.classList.remove(xclass);};CaveHTMLDOM.createTextNode = function(text) {if((text) == (null)) {return(null);}return(document.createTextNode(text));};CaveHTMLDOM.doesBrowserSupportFontLoading = function() {var v = false;if(document["fonts"]) {v = true;}return(v);};CaveHTMLDOM.setFontFamily = function(element, fontFamily) {if((element) == (null) || (fontFamily) == (null)) {return;}if(CaveHTMLDOM.doesBrowserSupportFontLoading() || CaveHTMLDOM.isFontStandard(fontFamily)) {CaveHTMLDOM.setStyle(element, "font-family", fontFamily);}};CaveHTMLDOM.isFontStandard = function(fontFamily) {if((fontFamily) === ("Arial") || (fontFamily) === ("Times New Roman") || (fontFamily) === ("serif") || (fontFamily) === ("sans-serif") || (fontFamily) === ("Helvetica") || (fontFamily) === ("Courier New") || (fontFamily) === ("Courier") || (fontFamily) === ("monospace") || (fontFamily) === ("Verdana")) {return(true);}return(false);};var CaveImage = function() {{} };var P = CaveImage.prototype;P.constructor = CaveImage;P._t = {}; P._t["CaveImage"] = true;CaveImage.createInstance = function() {var _v = new CaveImage();return(_v._construct());};P._construct = function() {return(this);};P.getPixelWidth = function() {};P.getPixelHeight = function() {};P.scaleToSize = function(w, h) {};P.scaleToWidth = function(w) {};P.scaleToHeight = function(h) {};P.crop = function(x, y, w, h) {};P.toJPGData = function() {};P.toPNGData = function() {};P.toRGBAData = function() {};P.releaseImage = function() {};var CaveImageForHTML = function() {CaveImage.call(this);this.image = null;{} };var P = CaveImageForHTML.prototype = (function(o) {function F() {} F.prototype = o;return(new F());}) (CaveImage.prototype);P.constructor = CaveImageForHTML;P._t = {}; P._t["CaveImageForHTML"] = true;P._t["CaveImage"] = true;CaveImageForHTML.createInstance = function() {var _v = new CaveImageForHTML();return(_v._construct());};P._construct = function() {if(CaveImage.prototype._construct.call(this) == (null)) {return(null);}(this.image) = (null);return(this);};P.getSource = function() {if((this.image) !== (null)) {return(this.image.src);}return(null);};P.getPixelWidth = function() {if((this.image) == (null)) {return(0);}return(this.image.width);};P.getPixelHeight = function() {if((this.image) == (null)) {return(0);}return(this.image.height);};P.scaleToSize = function(w, h) {console.log("[cave.ImageForHTML.scaleToSize] (ImageForHTML@target_html.sling:54:1): Not implemented");return(null);};P.scaleToWidth = function(w) {console.log("[cave.ImageForHTML.scaleToWidth] (ImageForHTML@target_html.sling:60:1): Not implemented");return(null);};P.scaleToHeight = function(h) {console.log("[cave.ImageForHTML.scaleToHeight] (ImageForHTML@target_html.sling:66:1): Not implemented");return(null);};P.crop = function(x, y, w, h) {console.log("[cave.ImageForHTML.crop] (ImageForHTML@target_html.sling:72:1): Not implemented");return(null);};P.toJPGData = function() {console.log("[cave.ImageForHTML.toJPGData] (ImageForHTML@target_html.sling:78:1): Not implemented");return(null);};P.toPNGData = function() {console.log("[cave.ImageForHTML.toPNGData] (ImageForHTML@target_html.sling:84:1): Not implemented");return(null);};P.toRGBAData = function() {console.log("[cave.ImageForHTML.toRGBAData] (ImageForHTML@target_html.sling:90:1): Not implemented");return(null);};P.releaseImage = function() {console.log("[cave.ImageForHTML.releaseImage] (ImageForHTML@target_html.sling:96:1): Not implemented");};var CaveImageSheet = function() {this.sheet = null;this.cols = null;this.rows = null;this.sourceSkipX = null;this.sourceSkipY = null;this.sourceImageWidth = null;this.sourceImageHeight = null;this.maxImages = null;{} };var P = CaveImageSheet.prototype;P.constructor = CaveImageSheet;P._t = {}; P._t["CaveImageSheet"] = true;CaveImageSheet.createInstance = function() {var _v = new CaveImageSheet();return(_v._construct());};P._construct = function() {(this.maxImages) = -(1);(this.sourceImageHeight) = -(1);(this.sourceImageWidth) = -(1);(this.sourceSkipY) = (0);(this.sourceSkipX) = (0);(this.rows) = -(1);(this.cols) = -(1);(this.sheet) = (null);return(this);};P.toImages = function(resizeToWidth, resizeToHeight) {if((this.sheet) == (null)) {return(null);}var cols = this.cols;var rows = this.rows;var fwidth = this.sourceImageWidth;if((fwidth) < (1)) {(fwidth) = (this.sheet.getPixelWidth() - (this.sourceSkipX)) / (cols);}else {(cols) = (this.sheet.getPixelWidth() - (this.sourceSkipX)) / (fwidth);}var fheight = this.sourceImageHeight;if((fheight) < (1)) {(fheight) = (this.sheet.getPixelHeight() - (this.sourceSkipY)) / (rows);}else {(rows) = (this.sheet.getPixelHeight() - (this.sourceSkipY)) / (fheight);}var frames = new Array();var x = 0;var y = 0;for((y) = (0) ; (y) < (rows) ; (y)++) {for((x) = (0) ; (x) < (cols) ; (x)++) {var img = this.sheet.crop((x) * (fwidth), (y) * (fheight), fwidth, fheight);if((resizeToWidth) > (0)) {(img) = img.scaleToSize(resizeToWidth, resizeToHeight);}frames.push(img);if((this.maxImages) > (0) && CapeVector.getSize(frames) >= (this.maxImages)) {return(frames);}}}return(frames);};P.getSheet = function() {return(this.sheet);};P.setSheet = function(v) {(this.sheet) = (v);return(this);};P.getCols = function() {return(this.cols);};P.setCols = function(v) {(this.cols) = (v);return(this);};P.getRows = function() {return(this.rows);};P.setRows = function(v) {(this.rows) = (v);return(this);};P.getSourceSkipX = function() {return(this.sourceSkipX);};P.setSourceSkipX = function(v) {(this.sourceSkipX) = (v);return(this);};P.getSourceSkipY = function() {return(this.sourceSkipY);};P.setSourceSkipY = function(v) {(this.sourceSkipY) = (v);return(this);};P.getSourceImageWidth = function() {return(this.sourceImageWidth);};P.setSourceImageWidth = function(v) {(this.sourceImageWidth) = (v);return(this);};P.getSourceImageHeight = function() {return(this.sourceImageHeight);};P.setSourceImageHeight = function(v) {(this.sourceImageHeight) = (v);return(this);};P.getMaxImages = function() {return(this.maxImages);};P.setMaxImages = function(v) {(this.maxImages) = (v);return(this);};var CaveKeyEvent = function() {this.action = null;this.keyCode = null;this.stringValue = null;this.shift = null;this.control = null;this.command = null;this.alt = null;this.isConsumed = null;{} };var P = CaveKeyEvent.prototype;P.constructor = CaveKeyEvent;CaveKeyEvent.ACTION_NONE = 0;CaveKeyEvent.ACTION_DOWN = 1;CaveKeyEvent.ACTION_UP = 2;CaveKeyEvent.KEY_NONE = 0;CaveKeyEvent.KEY_SPACE = 1;CaveKeyEvent.KEY_ENTER = 2;CaveKeyEvent.KEY_TAB = 3;CaveKeyEvent.KEY_ESCAPE = 4;CaveKeyEvent.KEY_BACKSPACE = 5;CaveKeyEvent.KEY_SHIFT = 6;CaveKeyEvent.KEY_CONTROL = 7;CaveKeyEvent.KEY_ALT = 8;CaveKeyEvent.KEY_CAPSLOCK = 9;CaveKeyEvent.KEY_NUMLOCK = 10;CaveKeyEvent.KEY_LEFT = 11;CaveKeyEvent.KEY_UP = 12;CaveKeyEvent.KEY_RIGHT = 13;CaveKeyEvent.KEY_DOWN = 14;CaveKeyEvent.KEY_INSERT = 15;CaveKeyEvent.KEY_DELETE = 16;CaveKeyEvent.KEY_HOME = 17;CaveKeyEvent.KEY_END = 18;CaveKeyEvent.KEY_PAGEUP = 19;CaveKeyEvent.KEY_PAGEDOWN = 20;CaveKeyEvent.KEY_F1 = 21;CaveKeyEvent.KEY_F2 = 22;CaveKeyEvent.KEY_F3 = 23;CaveKeyEvent.KEY_F4 = 24;CaveKeyEvent.KEY_F5 = 25;CaveKeyEvent.KEY_F6 = 26;CaveKeyEvent.KEY_F7 = 27;CaveKeyEvent.KEY_F8 = 28;CaveKeyEvent.KEY_F9 = 29;CaveKeyEvent.KEY_F10 = 30;CaveKeyEvent.KEY_F11 = 31;CaveKeyEvent.KEY_F12 = 32;CaveKeyEvent.KEY_SUPER = 33;CaveKeyEvent.KEY_BACK = 34;P._t = {}; P._t["CaveKeyEvent"] = true;CaveKeyEvent.createInstance = function() {var _v = new CaveKeyEvent();return(_v._construct());};P._construct = function() {(this.isConsumed) = (false);(this.alt) = (false);(this.command) = (false);(this.control) = (false);(this.shift) = (false);(this.stringValue) = (null);(this.keyCode) = (0);(this.action) = (0);return(this);};P.consume = function() {(this.isConsumed) = (true);};P.isKeyPress = function(key) {if((this.action) === (CaveKeyEvent.ACTION_DOWN) && (this.keyCode) === (key)) {return(true);}return(false);};P.isKey = function(key) {if((this.keyCode) === (key)) {return(true);}return(false);};P.isString = function(value) {if((value) === (this.stringValue)) {return(true);}return(false);};P.isCharacter = function(value) {if(!((this.stringValue) == (null)) && CapeString.getChar(this.stringValue, 0) === (value)) {return(true);}return(false);};P.clear = function() {(this.action) = (0);(this.keyCode) = (0);(this.stringValue) = (null);(this.isConsumed) = (false);};P.getAction = function() {return(this.action);};P.setAction = function(v) {(this.action) = (v);return(this);};P.getKeyCode = function() {return(this.keyCode);};P.setKeyCode = function(v) {(this.keyCode) = (v);return(this);};P.getStringValue = function() {return(this.stringValue);};P.setStringValue = function(v) {(this.stringValue) = (v);return(this);};P.getShift = function() {return(this.shift);};P.setShift = function(v) {(this.shift) = (v);return(this);};P.getControl = function() {return(this.control);};P.setControl = function(v) {(this.control) = (v);return(this);};P.getCommand = function() {return(this.command);};P.setCommand = function(v) {(this.command) = (v);return(this);};P.getAlt = function() {return(this.alt);};P.setAlt = function(v) {(this.alt) = (v);return(this);};var CaveLength = function() {this.value = null;this.unit = null;{} };var P = CaveLength.prototype;P.constructor = CaveLength;CaveLength.UNIT_POINT = 0;CaveLength.UNIT_MILLIMETER = 1;CaveLength.UNIT_MICROMETER = 2;CaveLength.UNIT_NANOMETER = 3;CaveLength.UNIT_INCH = 4;P._t = {}; P._t["CaveLength"] = true;CaveLength.createInstance = function() {var _v = new CaveLength();return(_v._construct());};P._construct = function() {(this.unit) = (0);(this.value) = (0.0);return(this);};CaveLength.asPoints = function(value, ppi) {return(CaveLength.forString(value).toPoints(ppi));};CaveLength.forString = function(value) {var v = CaveLength.createInstance();v.parse(value);return(v);};CaveLength.forPoints = function(value) {var v = CaveLength.createInstance();v.setValue(value);v.setUnit(CaveLength.UNIT_POINT);return(v);};CaveLength.forMilliMeters = function(value) {var v = CaveLength.createInstance();v.setValue(value);v.setUnit(CaveLength.UNIT_MILLIMETER);return(v);};CaveLength.forMicroMeters = function(value) {var v = CaveLength.createInstance();v.setValue(value);v.setUnit(CaveLength.UNIT_MICROMETER);return(v);};CaveLength.forNanoMeters = function(value) {var v = CaveLength.createInstance();v.setValue(value);v.setUnit(CaveLength.UNIT_NANOMETER);return(v);};CaveLength.forInches = function(value) {var v = CaveLength.createInstance();v.setValue(value);v.setUnit(CaveLength.UNIT_INCH);return(v);};CaveLength.forValue = function(value, unit) {var v = CaveLength.createInstance();v.setValue(value);v.setUnit(unit);return(v);};CaveLength.forStringAsPoints = function(value, ppi) {var v = CaveLength.createInstance();v.parse(value);v.setValue(v.toPoints(ppi));v.setUnit(CaveLength.UNIT_POINT);return(v);};P.parse = function(value) {if((value) == (null)) {this.value = (0);(this.unit) = (CaveLength.UNIT_POINT);return;}var i = 0;var n = 0;var it = CapeString.iterate(value);while(true) {var c = it.getNextChar();if((c).charCodeAt() < (1)) {break;}else {if((c).charCodeAt() >= ('0').charCodeAt() && (c).charCodeAt() <= ('9').charCodeAt()) {(i) *= (10);(i) += ((c).charCodeAt() - ('0').charCodeAt());}else {break;}}(n)++;}this.value = (i);var suffix = CapeString.subStringWithStringAndSignedInteger(value, n);if(CapeString.isEmpty(suffix)) {(this.unit) = (CaveLength.UNIT_POINT);}else {if((suffix) === ("pt") || (suffix) === ("px")) {(this.unit) = (CaveLength.UNIT_POINT);}else {if((suffix) === ("mm")) {(this.unit) = (CaveLength.UNIT_MILLIMETER);}else {if((suffix) === ("um")) {(this.unit) = (CaveLength.UNIT_MICROMETER);}else {if((suffix) === ("nm")) {(this.unit) = (CaveLength.UNIT_NANOMETER);}else {if((suffix) === ("in")) {(this.unit) = (CaveLength.UNIT_INCH);}else {(this.unit) = (CaveLength.UNIT_POINT);}}}}}}};P.toPoints = function(ppi) {if((this.unit) === (CaveLength.UNIT_POINT)) {return(~~(this.value));}if((this.unit) === (CaveLength.UNIT_MILLIMETER)) {var v = (this.value) * (ppi) / (25);if((this.value) > (0) && (v) < (1)) {(v) = (1);}return(~~(v));}if((this.unit) === (CaveLength.UNIT_MICROMETER)) {var v = (this.value) * (ppi) / (25000);if((this.value) > (0) && (v) < (1)) {(v) = (1);}return(~~(v));}if((this.unit) === (CaveLength.UNIT_NANOMETER)) {var v = (this.value) * (ppi) / (25000000);if((this.value) > (0) && (v) < (1)) {(v) = (1);}return(~~(v));}if((this.unit) === (CaveLength.UNIT_INCH)) {var v = (this.value) * (ppi);if((this.value) > (0) && (v) < (1)) {(v) = (1);}return(~~(v));}return(0);};P.getValue = function() {return(this.value);};P.setValue = function(v) {(this.value) = (v);return(this);};P.getUnit = function() {return(this.unit);};P.setUnit = function(v) {(this.unit) = (v);return(this);};var CavePointerEvent = function() {this.pointerId = null;this.action = null;this.x = null;this.y = null;this.isConsumed = null;{} };var P = CavePointerEvent.prototype;P.constructor = CavePointerEvent;CavePointerEvent.DOWN = 0;CavePointerEvent.MOVE = 1;CavePointerEvent.CANCEL = 2;CavePointerEvent.UP = 3;P._t = {}; P._t["CavePointerEvent"] = true;CavePointerEvent.createInstance = function() {var _v = new CavePointerEvent();return(_v._construct());};P._construct = function() {(this.isConsumed) = (false);(this.y) = (0.0);(this.x) = (0.0);(this.action) = (0);(this.pointerId) = (0);return(this);};P.consume = function() {(this.isConsumed) = (true);};P.getPointerId = function() {return(this.pointerId);};P.setPointerId = function(value) {(this.pointerId) = (value);return(this);};P.getAction = function() {return(this.action);};P.setAction = function(value) {(this.action) = (value);return(this);};P.getX = function() {return(this.x);};P.setX = function(value) {(this.x) = (value);return(this);};P.getY = function() {return(this.y);};P.setY = function(value) {(this.y) = (value);return(this);};P.isInside = function(xc, yc, width, height) {if((this.x) >= (xc) && (this.x) < (xc) + (width) && (this.y) >= (yc) && (this.y) < (yc) + (height)) {return(true);}return(false);};var CaveScreen = function() {{} };var P = CaveScreen.prototype;P.constructor = CaveScreen;P._t = {}; P._t["CaveScreen"] = true;CaveScreen.createInstance = function() {var _v = new CaveScreen();return(_v._construct());};P._construct = function() {return(this);};